Screens:
  Main:
    Properties:
      Fill: =RGBA(7, 22, 54, 1)
      LoadingSpinner: =
      LoadingSpinnerColor: =RGBA(56, 96, 178, 1)
      OnVisible: "=\nSet(varLoading,true);\n\nClearCollect(\n    UltimaFecha,FirstN(\n    SortByColumns(solicitudes_processed_warehouse, \"fecha_solicitud\", SortOrder.Descending),1)\n);\nSet(\n    FechaMaxima,\n    First(UltimaFecha).fecha_solicitud\n);\nSet(\n    FechaMinima,\n    DateAdd(FechaMaxima,-365,\"Days\"));\n\n\nSet(\n    CurrentPage,\n    1\n);\n\n\n\nSet(\n    SqlQuery,\n    \"SELECT \n        sp.*,\n        sc.cluster,\n        pp.prediccion_aprobado,\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\n    FROM \n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\n    LEFT JOIN\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\n    LEFT JOIN\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud \n        \n    \n        WHERE \" & If(\n            IsBlank(SearchIDSolicitud.Text),\n            \"1=1\",\n            \"id_solicitud LIKE '%\" & Substitute(\n                SearchIDSolicitud.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchCedula.Text),\n            \"1=1\",\n            \"cedula_ciudadania LIKE '%\" & Substitute(\n                SearchCedula.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchNombre.Text),\n            \"1=1\",\n            \"nombre LIKE '%\" & Substitute(\n                SearchNombre.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchApellido.Text),\n            \"1=1\",\n            \"apellido LIKE '%\" & Substitute(\n                SearchApellido.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(DatePickerStart.SelectedDate),\n            \"1=1\",\n            \"fecha_solicitud >= '\" & Text(\n                DatePickerStart.SelectedDate,\n                \"[$-en-US]yyyy-mm-dd\"\n            ) & \"'\"\n        ) & \" AND \" & If(\n            IsBlank(DatePickerEnd.SelectedDate),\n            \"1=1\",\n            \"fecha_solicitud <= '\" & Text(\n                DatePickerEnd.SelectedDate,\n                \"[$-en-US]yyyy-mm-dd\"\n            ) & \"'\"\n        ) & \" AND \" & If(\n            DropdownEstado.Selected.Value = \"Todos\",\n            \"1=1\",\n            If(\n                DropdownEstado.Selected.Value = \"Evaluadas\",\n                \"solicitud_credito IN (0, 1)\",\n                \"solicitud_credito IS NULL\"\n            )\n        ) & \"\n\n    ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\n);\nSet(\n    flowResponse,\n    ObtenerSolicitudesPaginadas.Run(SqlQuery)\n);\n\n\nClear(FullSolicitudes);\nForAll(\n    ParseJSON(flowResponse.results),\n    Collect(\n        FullSolicitudes,\n        {\n            id_solicitud: Text(ThisRecord.id_solicitud),\n            fecha_solicitud: Text(\n                DateTimeValue(Text(ThisRecord.fecha_solicitud)),\n                \"yyyy-mm-dd\"\n            ),\n            cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\n            nombre: Text(ThisRecord.nombre),\n            apellido: Text(ThisRecord.apellido),\n            edad: Value(ThisRecord.edad),\n            ingresos_anuales: Value(ThisRecord.ingresos_anuales),\n            puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\n            historial_pagos: Text(ThisRecord.historial_pagos),\n            deuda_actual: Value(ThisRecord.deuda_actual),\n            antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\n            estado_civil: Text(ThisRecord.estado_civil),\n            numero_dependientes: Value(ThisRecord.numero_dependientes),\n            tipo_empleo: Text(ThisRecord.tipo_empleo),\n            solicitud_credito: If(\n                IsBlank(ThisRecord.solicitud_credito),\n                Blank(),\n                Value(ThisRecord.solicitud_credito)\n            ),\n            inicio_mes: Text(\n                DateTimeValue(Text(ThisRecord.inicio_mes)),\n                \"yyyy-mm-dd\"\n            ),\n            inicio_semana: Text(\n                DateTimeValue(Text(ThisRecord.inicio_semana)),\n                \"yyyy-mm-dd\"\n            ),\n            estado_solicitud: Text(ThisRecord.estado_solicitud),\n            historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\n            estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\n            tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\n            // Nuevas columnas del LEFT JOIN\n            cluster: Value(ThisRecord.cluster),\n            prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\n            probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\n        }\n    )\n);\n\n// Calcular el total primero\nSet(\n    varTotal,\n    CountRows(FullSolicitudes)\n);\n\n\n// Colección con Estado\nClearCollect(\n    colEstadosPorcentual,\n    AddColumns(\n        GroupBy(\n            FullSolicitudes,\n            estado_solicitud,\n            Grupo\n        ),\n        Conteo,\n        CountRows(Grupo),\n        Porcentaje,\n\n        If(varTotal<>0,\n        Round(\n            CountRows(Grupo) / varTotal * 100,\n            2\n        ),0)\n\n\n    )\n);\n// Colección con Historial de Pagos por Cliente\nClearCollect(\n    colResumenHistorialPagos,\n    AddColumns(\n        GroupBy(\n            FullSolicitudes,\n            historial_pagos,\n            GrupoPorHistorial\n        ),\n        Categoria,\n        historial_pagos,\n        PersonasUnicas,\n        CountRows(\n            Distinct(\n                ShowColumns(\n                    GrupoPorHistorial,\n                    cedula_ciudadania\n                ),\n                cedula_ciudadania\n            )\n        ),\n        TotalPersona,\n        CountRows(\n            Distinct(\n                FullSolicitudes,\n                cedula_ciudadania\n            )\n        ),\n        Porcentaje,\n        If(\n            CountRows(Distinct(FullSolicitudes, cedula_ciudadania)) <> 0, // Check if the denominator is not zero\n            Round(\n                CountRows(\n                    Distinct(\n                        ShowColumns(\n                            GrupoPorHistorial,\n                            cedula_ciudadania\n                        ),\n                        cedula_ciudadania\n                    )\n                ) / CountRows(\n                    Distinct(\n                        FullSolicitudes,\n                        cedula_ciudadania\n                    )\n                ) * 100,\n                2\n            ),\n            0 // Return 0 if the denominator is zero\n        )\n    )\n);\n\n\n\n\nSet(\n    TasaAprobacion,\n    If(\n        varTotal = 0 || CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito))) = 0,\n        Blank(),\n        Text(\n            (CountRows(Filter(FullSolicitudes, solicitud_credito = 1)) / \n             CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito)))) * 100,\n            \"[$-en-US]#.0%\"\n        )\n    )\n);\n\n\n\n// Ver Visuales y Registros\nIf(CountRows(FullSolicitudes)>=1, Set(varVisuales_A, true), Set(varVisuales_A, false));\nIf(CountRows(FullSolicitudes)>=1, Set(varRegistros_A, true), Set(varRegistros_A, false));\n\nIf(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));\n\nSet(varVisuales_A,false);\nSet(varShowCreateForm, false);\nSet(varGrpDetalle_A,true);\nSet(varLoading, false);\n\n"
    Children:
      - cont_visuales:
          Control: GroupContainer@1.3.0
          Variant: ManualLayout
          Properties:
            Fill: =RGBA(255, 255, 255, 0.9)
            Height: =730
            RadiusBottomLeft: =15
            RadiusBottomRight: =15
            RadiusTopLeft: =15
            RadiusTopRight: =15
            Width: =617
            X: =725
            Y: =18
          Children:
            - registros_lbl_2:
                Control: Label@2.5.1
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  Color: =RGBA(7, 22, 54, 1)
                  Font: =Font.'Lato Black'
                  Height: =46
                  Size: =22
                  Text: ="Detalle de la Solicitud"
                  Visible: =varGrpDetalle_A
                  Width: =486
                  X: =36
                  Y: =18
      - Rectangle6:
          Control: Rectangle@2.3.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Fill: =RGBA(4, 203, 134, 1)
            Height: =768
            Width: =78
      - btn_detalles_A:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.TrendingUpwards
            OnSelect: |-
              =Set(varVisuales_A,Not varVisuales_A);
              Set(varShowCreateForm,false);
              Set(varShowEditForm,false);
              If(varVisuales_A=true, Set(varGrpDetalle_A, false),Set(varGrpDetalle_A, true));
            Tooltip: ="Vista General de Página"
            Visible: =varBtnMain
            Width: =50
            X: =14
            Y: =352
      - Icon1:
          Control: Classic/Icon@2.5.0
          Group: grp_btn_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: |-
              =If(
                  Or(
                  // Comprueba si la fecha de inicio es diferente a la mínima por defecto
                      DatePickerStart.SelectedDate <> FechaMinima,
                  // Comprueba si la fecha de fin es diferente a la máxima por defecto
                      DatePickerEnd.SelectedDate <> FechaMaxima,
                  // Comprueba si la selección del estado es diferente a "Todos"
                      DropdownEstado.SelectedText.Value <> "Todos",
                  // Comprueba si el campo de ID de solicitud NO está vacío (después de quitar espacios)
                      Trim(SearchIDSolicitud.Text) <> "",
                  // Comprueba si el campo de Cédula NO está vacío (después de quitar espacios)
                      Trim(SearchCedula.Text) <> "",
                  // Comprueba si el campo de Apellido NO está vacío (después de quitar espacios)
                      Trim(SearchApellido.Text) <> "",
                  // Comprueba si el campo de Nombre NO está vacío (después de quitar espacios)
                      Trim(SearchNombre.Text) <> ""
                  ) = true,
                  RGBA(
                      7,
                      22,
                      54,
                      1
                  ),
                  RGBA(
                      255,
                      255,
                      255,
                      1
                  )
              )
            Height: =50
            Icon: =Icon.Filter
            OnSelect: |+
              =Set(varShowFilterGroup_A, Not varShowFilterGroup_A);
              Set(varGrpDetalle_A,true)
            Tooltip: ="Filtros/Consulta"
            Visible: =varBtnMain
            Width: =50
            X: =14
            Y: =705
      - registros_lbl_1:
          Control: Label@2.5.1
          Group: grp_visuales_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(7, 22, 54, 1)
            Font: =Font.'Lato Black'
            Height: =45
            Size: =22
            Text: ="Vista General de la Página"
            Visible: =varVisuales_A
            Width: =573
            X: =742
            Y: =35
      - Title2:
          Control: Label@2.5.1
          Group: grp_visuales_A
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Font: =Font.'Lato Black'
            Height: =26
            Size: =14
            Text: ="Solicitudes por Estado"
            Visible: =varVisuales_A
            Width: =290
            X: =1035
            Y: =193
      - ColumnChart2:
          Control: BarChart@2.3.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            GridStyle: =GridStyle.None
            Height: =228
            ItemColorSet: =
            Items: =colEstadosPorcentual
            Items.Labels: =estado_solicitud
            Items.Series1: =Conteo
            Items.Series2: =Porcentaje
            Items.Series3: =Porcentaje
            Items.Series4: =Porcentaje
            Items.Series5: =Porcentaje
            Items.Series6: =Porcentaje
            Items.Series7: =Porcentaje
            Items.Series8: =Porcentaje
            Items.Series9: =Porcentaje
            Size: =12
            Visible: =varVisuales_A
            Width: =300
            X: =1025
            Y: =189
      - Legend2:
          Control: Legend@2.1.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =48
            ItemColorSet: =ColumnChart2.ItemColorSet
            Items: =colEstadosPorcentual
            Items.Value: =estado_solicitud
            Size: =8
            Visible: =varVisuales_A
            Width: =290
            X: =1035
            Y: =421
      - HtmlText1:
          Control: HtmlViewer@2.1.0
          Group: grp_visuales_A
          Properties:
            Fill: =RGBA(56, 96, 178, 0)
            Font: =Font.Lato
            Height: =100
            HtmlText: |-
              ="<div style='text-align: left; font-family: Lato, Arial, sans-serif; background-color: #04cb86; padding: 10px;'>
                 <div style='font-size: 14px; color: #FFFFFF; margin-bottom: 5px;'>SOLICITUDES</div>
                 <div style='font-size: 32px; font-weight: bold; color: #FFFFFF;'>" & 
              CountRows(FullSolicitudes) & "</div>
              </div>"
            Visible: =varVisuales_A
            Width: =180
            X: =748
            Y: =94
      - HtmlText1_2:
          Control: HtmlViewer@2.1.0
          Group: grp_visuales_A
          Properties:
            Fill: =RGBA(0, 134, 208, 0)
            Font: =Font.Lato
            Height: =100
            HtmlText: |-
              ="<div style='text-align: left; font-family: Lato, Arial, sans-serif; background-color: #04cb86; padding: 10px;'>
                 <div style='font-size: 14px; color: #FFFFFF; margin-bottom: 5px;'>CLIENTES</div>
                 <div style='font-size: 32px; font-weight: bold; color: #FFFFFF;'>" & 
              CountRows(Distinct(FullSolicitudes, cedula_ciudadania)) & "</div>
              </div>"
            Visible: =varVisuales_A
            Width: =180
            X: =944
            Y: =94
      - Title1_1:
          Control: Label@2.5.1
          Group: grp_visuales_A
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Font: =Font.'Lato Black'
            Height: =27
            Size: =14
            Text: ="% Solicitudes por Estado"
            Visible: =varVisuales_A
            Width: =290
            X: =738
            Y: =191
      - PieChart1_1:
          Control: PieChart@2.2.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =252
            ItemColorSet: =
            Items: =colEstadosPorcentual
            Items.Labels: =Porcentaje
            Items.Series: =Porcentaje
            Size: =12
            Visible: =varVisuales_A
            Width: =290
            X: =738
            Y: =191
      - Legend1_1:
          Control: Legend@2.1.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =35
            ItemColorSet: =PieChart1_1.ItemColorSet
            Items: =colEstadosPorcentual
            Items.Value: =estado_solicitud
            Size: =8
            Visible: =varVisuales_A
            Width: =290
            X: =738
            Y: =419
      - Title1_2:
          Control: Label@2.5.1
          Group: grp_visuales_A
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Font: =Font.'Lato Black'
            Height: =46
            Size: =14
            Text: ="% Clientes por Historial de Pagos"
            Visible: =varVisuales_A
            Width: =290
            X: =742
            Y: =460
      - PieChart1_2:
          Control: PieChart@2.2.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =245
            ItemColorSet: =
            Items: =colResumenHistorialPagos
            Items.Labels: =Porcentaje
            Items.Series: =Porcentaje
            Size: =12
            Visible: =varVisuales_A
            Width: =290
            X: =742
            Y: =484
      - Legend1_2:
          Control: Legend@2.1.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =30
            ItemColorSet: =PieChart1_2.ItemColorSet
            Items: =colResumenHistorialPagos
            Items.Value: =Categoria
            Size: =8
            Visible: =varVisuales_A
            Width: =254
            X: =766
            Y: =711
      - Title2_1:
          Control: Label@2.5.1
          Group: grp_visuales_A
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Font: =Font.'Lato Black'
            Height: =26
            Size: =14
            Text: ="# Clientes por Historial de Pagos"
            Visible: =varVisuales_A
            Width: =290
            X: =1032
            Y: =470
      - ColumnChart2_1:
          Control: BarChart@2.3.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            GridStyle: =GridStyle.None
            Height: =206
            ItemColorSet: =
            Items: =colResumenHistorialPagos
            Items.Labels: =Categoria
            Items.Series1: =PersonasUnicas
            Items.Series2: =Porcentaje
            Items.Series3: =Porcentaje
            Items.Series4: =Porcentaje
            Items.Series5: =Porcentaje
            Items.Series6: =Porcentaje
            Items.Series7: =Porcentaje
            Items.Series8: =Porcentaje
            Items.Series9: =Porcentaje
            Size: =12
            Visible: =varVisuales_A
            Width: =300
            X: =1022
            Y: =492
      - Legend2_1:
          Control: Legend@2.1.0
          Group: grp_visuales_A
          Properties:
            Font: =Font.Lato
            Height: =30
            ItemColorSet: =ColumnChart2_1.ItemColorSet
            Items: =colResumenHistorialPagos
            Items.Value: =Categoria
            Size: =8
            Visible: =varVisuales_A
            Width: =248
            X: =1056
            Y: =709
      - btn_crear_solicitud:
          Control: Classic/Icon@2.5.0
          Group: grp_btn_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.Add
            OnSelect: |+
              =
              Set(varGrpDetalle_A, false);
              Set(varVisuales_A, false);
              Set(varShowCreateForm, Not varShowCreateForm);
              Set(varShowEditForm,false);
              If(varShowCreateForm=true, Set(varGrpDetalle_A, false),Set(varGrpDetalle_A, true));
            Tooltip: ="Crear Solicitud"
            Visible: =varBtnMain
            Width: =50
            X: =14
            Y: =435
      - Icon2_1:
          Control: Classic/Icon@2.5.0
          Group: grp_btn_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.CheckBadge
            OnSelect: |-
              =Set(varGrpDetalle_A, false);
              Set(varVisuales_A, false);
              Set(varShowCreateForm, false);
              ResetForm(frm_edit);
              Set(varShowEditForm, Not varShowEditForm);
              If(varShowEditForm=true, Set(varGrpDetalle_A, false),Set(varGrpDetalle_A, true));
            Tooltip: ="Modificar Solicitud"
            Visible: =varBtnMain
            Width: =50
            X: =14
            Y: =520
      - Icon2_2:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.Home
            OnSelect: |-
              =Navigate(Home,ScreenTransition.Fade)




              //Launch("https://apps.powerapps.com/play/e/879e6622-b045-e49a-93f4-c85135d789e4/a/dfd88389-8e15-430b-ad85-8c3e4feb6d23?tenantId=ed9632eb-7aec-4a12-9833-14813b609224&hint=ff159be5-09ba-4639-8a6b-b9f8d90c0f3a&sourcetime=1745536896892")
            Width: =50
            X: =14
            Y: =7
      - Icon2_3:
          Control: Classic/Icon@2.5.0
          Group: grp_btn_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.Reload
            OnSelect: |+
              =
              Set(varLoading, true);
              Set(varVisuales_A,false);
              Set(varGrpDetalle_A,true);

              ClearCollect(
                  UltimaFecha,FirstN(
                  SortByColumns(solicitudes_processed_warehouse, "fecha_solicitud", SortOrder.Descending),1)
              );
              Set(
                  FechaMaxima,
                  First(UltimaFecha).fecha_solicitud
              );
              Set(
                  FechaMinima,
                  DateAdd(FechaMaxima,-365,"Days"));

              Reset(DatePickerStart);
              Reset(DatePickerEnd);
              Reset(DropdownEstado);
              Reset(SearchIDSolicitud);
              Reset(SearchCedula);
              Reset(SearchApellido);
              Reset(SearchNombre);

              // Reiniciar la página a 1 al aplicar un nuevo filtro
              Set(
                  CurrentPage,
                  1
              );
              // Construir la consulta SQL con paginado y LEFT JOINs
              Set(
                  SqlQuery,
                  "SELECT 
                      sp.*,
                      sc.cluster,
                      pp.prediccion_aprobado,
                      ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'
                  FROM 
                      [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp
                  LEFT JOIN
                      solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud
                  LEFT JOIN
                      predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud
                  WHERE 
                      sp.fecha_solicitud >= '" & Text(FechaMinima, "[$-en-US]yyyy-mm-dd") & "' 
                      AND sp.fecha_solicitud <= '" & Text(FechaMaxima, "[$-en-US]yyyy-mm-dd") & "'
                  ORDER BY sp.id_solicitud DESC OFFSET (" & CurrentPage & " - 1) * " & PageSize & " ROWS FETCH NEXT " & PageSize & " ROWS ONLY"
              );
              // Ejecutar el flujo
              Set(
                  flowResponse,
                  ObtenerSolicitudesPaginadas.Run(SqlQuery)
              );
              // Limpiar la colección
              Clear(FullSolicitudes);
              // Parsear el JSON y llenar la colección
              ForAll(
                  ParseJSON(flowResponse.results),
                  Collect(
                      FullSolicitudes,
                      {
                          id_solicitud: Text(ThisRecord.id_solicitud),
                          fecha_solicitud: Text(
                              If(
                                  IsBlank(ThisRecord.fecha_solicitud),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.fecha_solicitud))
                              ),
                              "yyyy-mm-dd"
                          ),
                          cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),
                          nombre: Text(ThisRecord.nombre),
                          apellido: Text(ThisRecord.apellido),
                          edad: Value(ThisRecord.edad),
                          ingresos_anuales: Value(ThisRecord.ingresos_anuales),
                          puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),
                          historial_pagos: Text(ThisRecord.historial_pagos),
                          deuda_actual: Value(ThisRecord.deuda_actual),
                          antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),
                          estado_civil: Text(ThisRecord.estado_civil),
                          numero_dependientes: Value(ThisRecord.numero_dependientes),
                          tipo_empleo: Text(ThisRecord.tipo_empleo),
                          solicitud_credito: If(
                              IsBlank(ThisRecord.solicitud_credito),
                              Blank(),
                              Value(ThisRecord.solicitud_credito)
                          ),
                          inicio_mes: Text(
                              If(
                                  IsBlank(ThisRecord.inicio_mes),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.inicio_mes))
                              ),
                              "yyyy-mm-dd"
                          ),
                          inicio_semana: Text(
                              If(
                                  IsBlank(ThisRecord.inicio_semana),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.inicio_semana))
                              ),
                              "yyyy-mm-dd"
                          ),
                          estado_solicitud: Text(ThisRecord.estado_solicitud),
                          historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),
                          estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),
                          tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),
                          // Nuevas columnas del LEFT JOIN
                          cluster: Value(ThisRecord.cluster),
                          prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),
                          probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)
                      }
                  )
              );
              Set(
                  varShowFilterGroup_A,
                  false
              );
              // Calcular el total primero (esto puede necesitar un ajuste si el total count se hace en SQL)
              Set(
                  varTotal,
                  CountRows(FullSolicitudes)
              );
              // Crear colección con porcentajes
              ClearCollect(
                  colEstadosPorcentual,
                  AddColumns(
                      GroupBy(
                          FullSolicitudes,
                          estado_solicitud,
                          Grupo
                      ),
                      Conteo,
                      CountRows(Grupo),
                      Porcentaje,
                      Round(
                          CountRows(Grupo) / varTotal * 100,
                          2
                      )
                  )
              );

              // Colección con Historial de Pagos por Cliente
              ClearCollect(
                  colResumenHistorialPagos,
                  AddColumns(
                      GroupBy(
                          FullSolicitudes,
                          historial_pagos,
                          GrupoPorHistorial
                      ),
                      Categoria,
                      historial_pagos,
                      PersonasUnicas,
                      CountRows(
                          Distinct(
                              ShowColumns(
                                  GrupoPorHistorial,
                                  cedula_ciudadania
                              ),
                              cedula_ciudadania
                          )
                      ),
                      TotalPersona,
                      CountRows(
                          Distinct(
                              FullSolicitudes,
                              cedula_ciudadania
                          )
                      ),
                      Porcentaje,
                      Round(
                          CountRows(
                              Distinct(
                                  ShowColumns(
                                      GrupoPorHistorial,
                                      cedula_ciudadania
                                  ),
                                  cedula_ciudadania
                              )
                          ) / CountRows(
                              Distinct(
                                  FullSolicitudes,
                                  cedula_ciudadania
                              )
                          ) * 100,
                          2
                      )
                  )
              );

              Set(varLoading, false);
              If(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));
            Tooltip: ="Refrescar"
            Visible: =varBtnMain
            Width: =50
            X: =14
            Y: =614
      - HtmlText1_3:
          Control: HtmlViewer@2.1.0
          Properties:
            Fill: =RGBA(0, 134, 208, 0)
            Font: =Font.Lato
            Height: =100
            HtmlText: |-
              ="<div style='text-align: left; font-family: Lato, Arial, sans-serif; background-color: #04cb86; padding: 10px;'>
                 <div style='font-size: 14px; color: #FFFFFF; margin-bottom: 5px;'>TASA DE APROBACIÓN</div>
                 <div style='font-size: 32px; font-weight: bold; color: #FFFFFF;'>" & 
              TasaAprobacion & "</div>
              </div>"
            Visible: =varVisuales_A
            Width: =180
            X: =1135
            Y: =94
      - HtmlText2:
          Control: HtmlViewer@2.1.0
          Properties:
            Font: =Font.'Open Sans'
            Height: =618
            HtmlText: |-
              =If(varTotal <> 0, 

                   // Todo tu código HTML actual va aquí dentro 

                   "<table style='width: 100%; font-family: Lato, sans-serif; font-size: 16px;'>" & 

                       "<tr>" & 

                           "<td style='background-color: #04cb86; color: white; padding: 8px; font-weight: bold; width: 50%;'>Campo</td>" & 

                           "<td style='background-color: #04cb86; color: white; padding: 8px; font-weight: bold; width: 50%;'>Valor</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>ID Solicitud</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.id_solicitud) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Fecha de Solicitud</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), Text(GallerySolicitudes.Selected.fecha_solicitud, "yyyy-mm-dd")) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Nombre y Apellido</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.nombre & " " & GallerySolicitudes.Selected.apellido) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Puntaje Crediticio</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.puntaje_crediticio) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Historial de Pagos</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.historial_pagos) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Ingresos Anuales</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), "$" & Text(GallerySolicitudes.Selected.ingresos_anuales, "#,##0.00")) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Deuda Actual</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), "$" & Text(GallerySolicitudes.Selected.deuda_actual, "#,##0.00")) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>DTI (%)</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & 

                               // INICIO Lógica de Color y FONDO para DTI (Esta lógica interna ya maneja la división por cero) 

                               If( 

                                   IsBlank(GallerySolicitudes.Selected) || GallerySolicitudes.Selected.ingresos_anuales = 0, 

                                   Blank(), // Si está en blanco o ingresos son cero, muestra "-" 

                                   // Si no está en blanco y ingresos > 0, calcula y colorea el DTI con fondo 

                                   With({ 

                                       dtiValue: If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual / GallerySolicitudes.Selected.ingresos_anuales * 100)=true,0,GallerySolicitudes.Selected.deuda_actual / GallerySolicitudes.Selected.ingresos_anuales * 100)

                                   }, 

                                       If( 

                                           dtiValue < 20, 

                                           "<span style='color: #4CAF50; background-color: #444; padding: 2px 5px; border-radius: 4px; display: inline-block;'>" & Text(dtiValue, "0.00") & "%</span>", // Verde + Fondo Gris Oscuro 

                                           dtiValue <= 35, 

                                           "<span style='color: #FFEB3B; background-color: #444; padding: 2px 5px; border-radius: 4px; display: inline-block;'>" & Text(dtiValue, "0.00") & "%</span>", // Amarillo + Fondo Gris Oscuro 

                                           dtiValue <= 50, 

                                           "<span style='color: #FF9800; background-color: #444; padding: 2px 5px; border-radius: 4px; display: inline-block;'>" & Text(dtiValue, "0.00") & "%</span>", // Naranja + Fondo Gris Oscuro 

                                           // Else: dtiValue > 50 

                                           "<span style='color: #F44336; background-color: #444; padding: 2px 5px; border-radius: 4px; display: inline-block;'>" & Text(dtiValue, "0.00") & "%</span>" // Rojo + Fondo Gris Oscuro 

                                       ) 

                                   ) 

                               ) 

                               // FIN Lógica de Color y FONDO para DTI 

                           & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Tipo de Empleo</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), "-", GallerySolicitudes.Selected.tipo_empleo) & "</td>" & 

                       "</tr>" & 

                           "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Estado Civil</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), "-", GallerySolicitudes.Selected.estado_civil) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Dependientes</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.numero_dependientes) & "</td>" & 

                       "</tr>" & 

                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Clúster</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), GallerySolicitudes.Selected.cluster) & "</td>" & 

                       "</tr>" & 



                       If( 

                           IsBlank(GallerySolicitudes.Selected) || IsBlank(GallerySolicitudes.Selected.prediccion_aprobado), 

                           "<tr>" & 

                               "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Predicción</td>" & 

                               "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), "-", "-") & "</td>" & 

                           "</tr>" & 

                           "<tr>" & 

                               "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Probabilidad de Aprobación</td>" & 

                               "<td style='padding: 8px; width: 60%; color: #555;'>" & If(IsBlank(GallerySolicitudes.Selected), Blank(), "-") & "</td>" & 

                           "</tr>", 

                           "<tr>" & 

                               "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Predicción</td>" & 

                               "<td style='padding: 8px; width: 60%; color: #555;'>" & Text(GallerySolicitudes.Selected.prediccion_aprobado) & "</td>" & 

                           "</tr>" & 

                           "<tr>" & 

                               "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Probabilidad de Aprobación</td>" & 

                               "<td style='padding: 8px; width: 60%; color: #555;'>" & Text(GallerySolicitudes.Selected.probabilidad_aprobado) & "%" & "</td>" & 

                           "</tr>" 

                       ) & 

                       " " & 



                       "<tr>" & 

                           "<td style='padding: 8px; width: 40%; font-weight: bold; color: #333;'>Decisión de la Solicitud</td>" & 

                           "<td style='padding: 8px; width: 60%; color: #555;'>" & 

                               If( 

                                   IsBlank(GallerySolicitudes.Selected), 

                                   "-", 

                                   If( 

                                       GallerySolicitudes.Selected.estado_solicitud = "Aprobado", 

                                       "<span style='background-color: #4CAF50; color: white; padding: 4px 8px; border-radius: 4px;'> " & GallerySolicitudes.Selected.estado_solicitud & "</span>", 

                                       If( 

                                           GallerySolicitudes.Selected.estado_solicitud = "Rechazado", 

                                           "<span style='background-color: #F44336; color: white; padding: 4px 8px; border-radius: 4px;'> " & GallerySolicitudes.Selected.estado_solicitud & "</span>", 

                                           "<span style='background-color: #9E9E9E; color: white; padding: 4px 8px; border-radius: 4px;'> " & GallerySolicitudes.Selected.estado_solicitud & "</span>" 

                                       ) 

                                   ) 

                               ) 

                           & "</td>" & 

                       "</tr>" & 

                   "</table>", 

                   // Si varTotal es cero, no se genera nada de HTML 

                   "" 

               )
            Visible: =varGrpDetalle_A
            Width: =557
            X: =758
            Y: =80
      - Container1:
          Control: GroupContainer@1.3.0
          Variant: ManualLayout
          Properties:
            Fill: =RGBA(255, 255, 255, 0.9)
            Height: =730
            RadiusBottomLeft: =15
            RadiusBottomRight: =15
            RadiusTopLeft: =15
            RadiusTopRight: =15
            Width: =607
            X: =101
            Y: =18
          Children:
            - btn_prev_A:
                Control: Classic/Icon@2.5.0
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  Color: =RGBA(7, 22, 54, 1)
                  Height: =30
                  Icon: =Icon.ChevronLeft
                  OnSelect: "=Set(varLoading, true);\r\n\r\nIf(\r\n    CurrentPage > 1,\r\n    Set(CurrentPage, CurrentPage - 1);\r\n    Set(\r\n        SqlQuery,\r\n    \"SELECT \r\n        sp.*,\r\n        sc.cluster,\r\n        pp.prediccion_aprobado,\r\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\r\n    FROM \r\n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\r\n    LEFT JOIN\r\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\r\n    LEFT JOIN\r\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud\r\n        \r\n    WHERE \" & \r\n        If(\r\n            IsBlank(SearchIDSolicitud.Text),\r\n            \"1=1\",\r\n            \"id_solicitud LIKE '%\" & Substitute(SearchIDSolicitud.Text, \"'\", \"''\") & \"%'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            IsBlank(SearchCedula.Text),\r\n            \"1=1\",\r\n            \"cedula_ciudadania LIKE '%\" & Substitute(SearchCedula.Text, \"'\", \"''\") & \"%'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            IsBlank(SearchNombre.Text),\r\n            \"1=1\",\r\n            \"nombre LIKE '%\" & Substitute(SearchNombre.Text, \"'\", \"''\") & \"%'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            IsBlank(SearchApellido.Text),\r\n            \"1=1\",\r\n            \"apellido LIKE '%\" & Substitute(SearchApellido.Text, \"'\", \"''\") & \"%'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            IsBlank(DatePickerStart.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud >= '\" & Text(DatePickerStart.SelectedDate, \"[$-en-US]yyyy-mm-dd\") & \"'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            IsBlank(DatePickerEnd.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud <= '\" & Text(DatePickerEnd.SelectedDate, \"[$-en-US]yyyy-mm-dd\") & \"'\"\r\n        ) & \" AND \" & \r\n        If(\r\n            DropdownEstado.Selected.Value = \"Todos\",\r\n            \"1=1\",\r\n            If(\r\n                DropdownEstado.Selected.Value = \"Evaluadas\",\r\n                \"solicitud_credito IN (0, 1)\",\r\n                \"solicitud_credito IS NULL\"\r\n            )\r\n        ) & \r\n        \" ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\r\n    );\r\n    Set(\r\n        flowResponse,\r\n        ObtenerSolicitudesPaginadas.Run(SqlQuery)\r\n    );\r\n    Clear(FullSolicitudes);\r\n    ForAll(\r\n        ParseJSON(flowResponse.results),\r\n        Collect(\r\n            FullSolicitudes,\r\n            {\r\n                id_solicitud: Text(ThisRecord.id_solicitud),\r\n                fecha_solicitud: Text(DateTimeValue(Text(ThisRecord.fecha_solicitud)), \"yyyy-mm-dd\"),\r\n                cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\r\n                nombre: Text(ThisRecord.nombre),\r\n                apellido: Text(ThisRecord.apellido),\r\n                edad: Value(ThisRecord.edad),\r\n                ingresos_anuales: Value(ThisRecord.ingresos_anuales),\r\n                puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\r\n                historial_pagos: Text(ThisRecord.historial_pagos),\r\n                deuda_actual: Value(ThisRecord.deuda_actual),\r\n                antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\r\n                estado_civil: Text(ThisRecord.estado_civil),\r\n                numero_dependientes: Value(ThisRecord.numero_dependientes),\r\n                tipo_empleo: Text(ThisRecord.tipo_empleo),\r\n                solicitud_credito: If(IsBlank(ThisRecord.solicitud_credito), Blank(), Value(ThisRecord.solicitud_credito)),\r\n                inicio_mes: Text(DateTimeValue(Text(ThisRecord.inicio_mes)), \"yyyy-mm-dd\"),\r\n                inicio_semana: Text(DateTimeValue(Text(ThisRecord.inicio_semana)), \"yyyy-mm-dd\"),\r\n                estado_solicitud: Text(ThisRecord.estado_solicitud),\r\n                historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\r\n                estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\r\n                tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\r\n                // Nuevas columnas del LEFT JOIN\r\n                cluster: Value(ThisRecord.cluster),\r\n                prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\r\n                probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\r\n            }\r\n        )\r\n    );\r\n);\r\n\r\n// Calcular el total primero\r\nSet(varTotal, CountRows(FullSolicitudes));\r\n\r\n// Colección con Estado\r\nClearCollect(\r\n    colEstadosPorcentual,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            estado_solicitud,\r\n            Grupo\r\n        ),\r\n        Conteo,\r\n        CountRows(Grupo),\r\n        Porcentaje,\r\n\r\n        If(varTotal<>0,\r\n        Round(\r\n            CountRows(Grupo) / varTotal * 100,\r\n            2\r\n        ),0)\r\n\r\n\r\n    )\r\n);\r\n// Colección con Historial de Pagos por Cliente\r\nClearCollect(\r\n    colResumenHistorialPagos,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            historial_pagos,\r\n            GrupoPorHistorial\r\n        ),\r\n        Categoria,\r\n        historial_pagos,\r\n        PersonasUnicas,\r\n        CountRows(\r\n            Distinct(\r\n                ShowColumns(\r\n                    GrupoPorHistorial,\r\n                    cedula_ciudadania\r\n                ),\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        TotalPersona,\r\n        CountRows(\r\n            Distinct(\r\n                FullSolicitudes,\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        Porcentaje,\r\n        If(varTotal<>0,\r\n        Round(\r\n            CountRows(\r\n                Distinct(\r\n                    ShowColumns(\r\n                        GrupoPorHistorial,\r\n                        cedula_ciudadania\r\n                    ),\r\n                    cedula_ciudadania\r\n                )\r\n            ) / CountRows(\r\n                Distinct(\r\n                    FullSolicitudes,\r\n                    cedula_ciudadania\r\n                )\r\n            ) * 100,\r\n            2\r\n        ),0)\r\n    )\r\n);\r\n\r\nSet(varLoading, false);\r\n"
                  Tooltip: ="Anterior"
                  Visible: =If(CurrentPage>1,true,false)
                  Width: =30
                  X: =380
                  Y: =681
            - Label4:
                Control: Label@2.5.1
                Properties:
                  Align: =Align.Center
                  BorderColor: =RGBA(0, 18, 107, 1)
                  Color: =RGBA(7, 22, 54, 1)
                  Font: =Font.Lato
                  Height: =43
                  Text: ="Página " & CurrentPage
                  Visible: =If(CountRows(FullSolicitudes)>=1,true,false)
                  Width: =132
                  X: =420
                  Y: =675
            - GallerySolicitudes:
                Control: Gallery@2.15.0
                Variant: BrowseLayout_Vertical_ThreeTextVariant_ver5.0
                Properties:
                  BorderColor: =RGBA(255, 255, 255, 1)
                  Fill: =RGBA(255, 255, 255, 0)
                  Height: =584
                  Items: =FullSolicitudes
                  OnSelect: =
                  TemplateFill: =
                  TemplateSize: =99
                  Visible: =varRegistros_A
                  Width: =571
                  X: =19
                  Y: =72
                Children:
                  - Title5:
                      Control: Label@2.5.1
                      Properties:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Font: =Font.'Lato Black'
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =31
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: |-
                          ="N° Solicitud: " & ThisItem.id_solicitud
                        VerticalAlign: =VerticalAlign.Top
                        Width: =299
                        X: =15
                        Y: =6
                  - Subtitle5:
                      Control: Label@2.5.1
                      Properties:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Font: =Font.Lato
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =31
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =12
                        Text: |-
                          ="Cliente: " & ThisItem.apellido & ", " & ThisItem.nombre
                        VerticalAlign: =VerticalAlign.Top
                        Width: =299
                        X: =15
                        Y: =37
                  - Separator5:
                      Control: Rectangle@2.3.0
                      Properties:
                        BorderColor: =RGBA(0, 18, 107, 1)
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =3
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                  - Rectangle5:
                      Control: Rectangle@2.3.0
                      Properties:
                        BorderColor: =RGBA(56, 96, 178, 1)
                        Fill: =RGBA(4,203,134,0.2)
                        Height: =Parent.TemplateHeight - Separator5.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =556
                  - Body3_1:
                      Control: Label@2.5.1
                      Properties:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =
                        Font: =Font.Lato
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =31
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =12
                        Text: |-
                          ="Fecha de Solicitud: " & ThisItem.fecha_solicitud
                        VerticalAlign: =VerticalAlign.Top
                        Width: =299
                        X: =15
                        Y: =64
                  - lbl_estado_solicitud:
                      Control: Classic/TextInput@2.3.2
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        BorderThickness: =3
                        Color: =If(lbl_estado_solicitud.Text = "Aprobado", RGBA(0, 80, 0, 1), If(lbl_estado_solicitud.Text = "Rechazado", RGBA(80, 0, 0, 1), RGBA(240, 50, 0, 1)))
                        Default: =ThisItem.estado_solicitud
                        DisplayMode: =DisplayMode.View
                        Fill: |+
                          =If(lbl_estado_solicitud.Text = "Aprobado", RGBA(0, 120, 0, 0.4), If(lbl_estado_solicitud.Text = "Rechazado", RGBA(250, 0, 0, 0.4), If(lbl_estado_solicitud.Text = "Pendiente", RGBA(255, 200, 0, 0.4), RGBA(0, 0, 0, 0))))

                        Font: =Font.Lato
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnSelect: =Select(Parent)
                        RadiusBottomLeft: =20
                        RadiusBottomRight: =20
                        RadiusTopLeft: =20
                        RadiusTopRight: =20
                        Size: =14
                        Width: =120
                        X: =417
                        Y: =30
            - registros_lbl:
                Control: Label@2.5.1
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  Color: =RGBA(7, 22, 54, 1)
                  Font: =Font.'Lato Black'
                  Height: =45
                  Size: =22
                  Text: ="Registro de Solicitudes"
                  Visible: =varRegistros_A
                  Width: =573
                  X: =12
                  Y: =14
            - btn_next_A:
                Control: Classic/Icon@2.5.0
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  Color: =RGBA(7, 22, 54, 1)
                  Height: =30
                  Icon: =Icon.ChevronRight
                  OnSelect: "=\nSet(varLoading, true);\n\nIf(\n    CountRows(FullSolicitudes) = PageSize,// Solo avanzar si hay 2000 registros (página completa)\n    Set(\n        CurrentPage,\n        CurrentPage + 1\n    );\n    Set(\n        SqlQuery,\n        \"SELECT \n        sp.*,\n        sc.cluster,\n        pp.prediccion_aprobado,\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\n        FROM \n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\n        LEFT JOIN\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\n        LEFT JOIN\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud   \n        \n        \n        WHERE \" & If(\n            IsBlank(SearchIDSolicitud.Text),\n            \"1=1\",\n            \"id_solicitud LIKE '%\" & Substitute(\n                SearchIDSolicitud.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchCedula.Text),\n            \"1=1\",\n            \"cedula_ciudadania LIKE '%\" & Substitute(\n                SearchCedula.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchNombre.Text),\n            \"1=1\",\n            \"nombre LIKE '%\" & Substitute(\n                SearchNombre.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(SearchApellido.Text),\n            \"1=1\",\n            \"apellido LIKE '%\" & Substitute(\n                SearchApellido.Text,\n                \"'\",\n                \"''\"\n            ) & \"%'\"\n        ) & \" AND \" & If(\n            IsBlank(DatePickerStart.SelectedDate),\n            \"1=1\",\n            \"fecha_solicitud >= '\" & Text(\n                DatePickerStart.SelectedDate,\n                \"[$-en-US]yyyy-mm-dd\"\n            ) & \"'\"\n        ) & \" AND \" & If(\n            IsBlank(DatePickerEnd.SelectedDate),\n            \"1=1\",\n            \"fecha_solicitud <= '\" & Text(\n                DatePickerEnd.SelectedDate,\n                \"[$-en-US]yyyy-mm-dd\"\n            ) & \"'\"\n        ) & \" AND \" & If(\n            DropdownEstado.Selected.Value = \"Todos\",\n            \"1=1\",\n            If(\n                DropdownEstado.Selected.Value = \"Evaluadas\",\n                \"solicitud_credito IN (0, 1)\",\n                \"solicitud_credito IS NULL\"\n            )\n        ) & \" ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\n    );\n    Set(\n        flowResponse,\n        ObtenerSolicitudesPaginadas.Run(SqlQuery)\n    );\n    Clear(FullSolicitudes);\n    ForAll(\n        ParseJSON(flowResponse.results),\n        Collect(\n            FullSolicitudes,\n            {\n                id_solicitud: Text(ThisRecord.id_solicitud),\n                fecha_solicitud: Text(\n                    DateTimeValue(Text(ThisRecord.fecha_solicitud)),\n                    \"yyyy-mm-dd\"\n                ),\n                cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\n                nombre: Text(ThisRecord.nombre),\n                apellido: Text(ThisRecord.apellido),\n                edad: Value(ThisRecord.edad),\n                ingresos_anuales: Value(ThisRecord.ingresos_anuales),\n                puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\n                historial_pagos: Text(ThisRecord.historial_pagos),\n                deuda_actual: Value(ThisRecord.deuda_actual),\n                antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\n                estado_civil: Text(ThisRecord.estado_civil),\n                numero_dependientes: Value(ThisRecord.numero_dependientes),\n                tipo_empleo: Text(ThisRecord.tipo_empleo),\n                solicitud_credito: If(\n                    IsBlank(ThisRecord.solicitud_credito),\n                    Blank(),\n                    Value(ThisRecord.solicitud_credito)\n                ),\n                inicio_mes: Text(\n                    DateTimeValue(Text(ThisRecord.inicio_mes)),\n                    \"yyyy-mm-dd\"\n                ),\n                inicio_semana: Text(\n                    DateTimeValue(Text(ThisRecord.inicio_semana)),\n                    \"yyyy-mm-dd\"\n                ),\n                estado_solicitud: Text(ThisRecord.estado_solicitud),\n                historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\n                estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\n                tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\n                // Nuevas columnas del LEFT JOIN\n                cluster: Value(ThisRecord.cluster),\n                prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\n                probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\n            }\n        )\n    );\n    \n);\n// Calcular el total primero\nSet(\n    varTotal,\n    CountRows(FullSolicitudes)\n);\n\n\n// Colección con Estado\nClearCollect(\n    colEstadosPorcentual,\n    AddColumns(\n        GroupBy(\n            FullSolicitudes,\n            estado_solicitud,\n            Grupo\n        ),\n        Conteo,\n        CountRows(Grupo),\n        Porcentaje,\n\n        If(varTotal<>0,\n        Round(\n            CountRows(Grupo) / varTotal * 100,\n            2\n        ),0)\n\n\n    )\n);\n// Colección con Historial de Pagos por Cliente\nClearCollect(\n    colResumenHistorialPagos,\n    AddColumns(\n        GroupBy(\n            FullSolicitudes,\n            historial_pagos,\n            GrupoPorHistorial\n        ),\n        Categoria,\n        historial_pagos,\n        PersonasUnicas,\n        CountRows(\n            Distinct(\n                ShowColumns(\n                    GrupoPorHistorial,\n                    cedula_ciudadania\n                ),\n                cedula_ciudadania\n            )\n        ),\n        TotalPersona,\n        CountRows(\n            Distinct(\n                FullSolicitudes,\n                cedula_ciudadania\n            )\n        ),\n        Porcentaje,\n        If(varTotal<>0,\n        Round(\n            CountRows(\n                Distinct(\n                    ShowColumns(\n                        GrupoPorHistorial,\n                        cedula_ciudadania\n                    ),\n                    cedula_ciudadania\n                )\n            ) / CountRows(\n                Distinct(\n                    FullSolicitudes,\n                    cedula_ciudadania\n                )\n            ) * 100,\n            2\n        ),0)\n    )\n);\n\nSet(varLoading, false);\n"
                  Tooltip: ="Siguiente"
                  Visible: =If(CountRows(FullSolicitudes)<500,false,true)
                  Width: =30
                  X: =560
                  Y: =681
      - Rectangle1:
          Control: Rectangle@2.3.0
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Fill: =RGBA(7, 22, 54, 1)
            Height: =768
            Visible: =varShowFilterGroup_A
            Width: =440
            X: =78
      - DatePickerStart:
          Control: Classic/DatePicker@2.6.0
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            DefaultDate: =FechaMinima
            Font: =Font.'Open Sans'
            Height: =49
            IconBackground: =RGBA(56, 96, 178, 1)
            IconFill: =RGBA(255, 255, 255, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =124
      - DatePickerEnd:
          Control: Classic/DatePicker@2.6.0
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            DefaultDate: =FechaMaxima
            Font: =Font.'Open Sans'
            Height: =49
            IconBackground: =RGBA(56, 96, 178, 1)
            IconFill: =RGBA(255, 255, 255, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =210
      - SearchIDSolicitud:
          Control: Classic/TextInput@2.3.2
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Default: =
            Font: =Font.'Open Sans'
            Height: =49
            HoverBorderColor: =RGBA(0, 18, 107, 1)
            HoverFill: =RGBA(186, 202, 226, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =380
      - SearchCedula:
          Control: Classic/TextInput@2.3.2
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Default: =
            Font: =Font.'Open Sans'
            Height: =49
            HoverBorderColor: =RGBA(0, 18, 107, 1)
            HoverFill: =RGBA(186, 202, 226, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =466
      - SearchApellido:
          Control: Classic/TextInput@2.3.2
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Default: =
            Font: =Font.'Open Sans'
            Height: =49
            HoverBorderColor: =RGBA(0, 18, 107, 1)
            HoverFill: =RGBA(186, 202, 226, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =552
      - DropdownEstado:
          Control: Classic/DropDown@2.3.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            ChevronBackground: =RGBA(56, 96, 178, 1)
            ChevronFill: =RGBA(255, 255, 255, 1)
            ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
            ChevronHoverFill: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =49
            HoverFill: =RGBA(186, 202, 226, 1)
            Items: =["Todos", "Evaluadas", "Pendientes"]
            Items.Value: =Value
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(0, 18, 107, 1)
            SelectionColor: =RGBA(255, 255, 255, 1)
            SelectionFill: =RGBA(56, 96, 178, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =296
      - FechaInicio_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Fecha de Inicio"
            Visible: =varShowFilterGroup_A
            Width: =235
            X: =104
            Y: =96
      - FechaFin_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Fecha Fin"
            Visible: =varShowFilterGroup_A
            Width: =235
            X: =104
            Y: =182
      - solicitudID_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="N° Solicitud"
            Visible: =varShowFilterGroup_A
            Width: =235
            X: =104
            Y: =353
      - CedulaCiudadania_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Cédula de Ciudadanía"
            Visible: =varShowFilterGroup_A
            Width: =314
            X: =104
            Y: =438
      - Apellido_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Apellido"
            Visible: =varShowFilterGroup_A
            Width: =314
            X: =104
            Y: =523
      - status_lbl:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Status de la Solicitud"
            Visible: =varShowFilterGroup_A
            Width: =314
            X: =104
            Y: =268
      - SearchNombre:
          Control: Classic/TextInput@2.3.2
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Default: =
            Font: =Font.'Open Sans'
            Height: =49
            HoverBorderColor: =RGBA(0, 18, 107, 1)
            HoverFill: =RGBA(186, 202, 226, 1)
            Visible: =varShowFilterGroup_A
            Width: =377
            X: =104
            Y: =631
      - Apellido_lbl_1:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Open Sans'
            Height: =20
            Text: ="Nombre"
            Visible: =varShowFilterGroup_A
            Width: =314
            X: =104
            Y: =609
      - registros_lbl_3:
          Control: Label@2.5.1
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.'Lato Black'
            Height: =45
            Size: =22
            Text: ="Filtrar y Consultar"
            Visible: =varShowFilterGroup_A
            Width: =406
            X: =101
            Y: =43
      - Icon3:
          Control: Classic/Icon@2.5.0
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.Search
            OnSelect: |+
              =
              Set(varLoading, true);

              // Reiniciar la página a 1 al aplicar un nuevo filtro
              Set(
                  CurrentPage,
                  1
              );
              // Construir la consulta SQL con paginado y LEFT JOINs
              Set(
                  SqlQuery,
                  "SELECT 
                      sp.*,
                      sc.cluster,
                      pp.prediccion_aprobado,
                      ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'
                  FROM 
                      [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp
                  LEFT JOIN
                      solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud
                  LEFT JOIN
                      predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud
                  WHERE " & If(
                      IsBlank(SearchIDSolicitud.Text),
                      "1=1",
                      "sp.id_solicitud LIKE '%" & Substitute(
                          SearchIDSolicitud.Text,
                          "'",
                          "''"
                      ) & "%'"
                  ) & " AND " & If(
                      IsBlank(SearchCedula.Text),
                      "1=1",
                      "sp.cedula_ciudadania LIKE '%" & Substitute(
                          SearchCedula.Text,
                          "'",
                          "''"
                      ) & "%'"
                  ) & " AND " & If(
                      IsBlank(SearchNombre.Text),
                      "1=1",
                      "sp.nombre LIKE '%" & Substitute(
                          SearchNombre.Text,
                          "'",
                          "''"
                      ) & "%'"
                  ) & " AND " & If(
                      IsBlank(SearchApellido.Text),
                      "1=1",
                      "sp.apellido LIKE '%" & Substitute(
                          SearchApellido.Text,
                          "'",
                          "''"
                      ) & "%'"
                  ) & " AND " & If(
                      IsBlank(DatePickerStart.SelectedDate),
                      "1=1",
                      "sp.fecha_solicitud >= '" & Text(
                          DatePickerStart.SelectedDate,
                          "[$-en-US]yyyy-mm-dd"
                      ) & "'"
                  ) & " AND " & If(
                      IsBlank(DatePickerEnd.SelectedDate),
                      "1=1",
                      "sp.fecha_solicitud <= '" & Text(
                          DatePickerEnd.SelectedDate,
                          "[$-en-US]yyyy-mm-dd"
                      ) & "'"
                  ) & " AND " & If(
                      DropdownEstado.Selected.Value = "Todos",
                      "1=1",
                      If(
                          DropdownEstado.Selected.Value = "Evaluadas",
                          "sp.solicitud_credito IN (0, 1)",
                          "sp.solicitud_credito IS NULL"
                      )
                  ) & " ORDER BY sp.id_solicitud DESC OFFSET (" & CurrentPage & " - 1) * " & PageSize & " ROWS FETCH NEXT " & PageSize & " ROWS ONLY"
              );
              // Ejecutar el flujo
              Set(
                  flowResponse,
                  ObtenerSolicitudesPaginadas.Run(SqlQuery)
              );
              // Limpiar la colección
              Clear(FullSolicitudes);
              // Parsear el JSON y llenar la colección
              ForAll(
                  ParseJSON(flowResponse.results),
                  Collect(
                      FullSolicitudes,
                      {
                          id_solicitud: Text(ThisRecord.id_solicitud),
                          fecha_solicitud: Text(
                              If(
                                  IsBlank(ThisRecord.fecha_solicitud),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.fecha_solicitud))
                              ),
                              "yyyy-mm-dd"
                          ),
                          cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),
                          nombre: Text(ThisRecord.nombre),
                          apellido: Text(ThisRecord.apellido),
                          edad: Value(ThisRecord.edad),
                          ingresos_anuales: Value(ThisRecord.ingresos_anuales),
                          puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),
                          historial_pagos: Text(ThisRecord.historial_pagos),
                          deuda_actual: Value(ThisRecord.deuda_actual),
                          antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),
                          estado_civil: Text(ThisRecord.estado_civil),
                          numero_dependientes: Value(ThisRecord.numero_dependientes),
                          tipo_empleo: Text(ThisRecord.tipo_empleo),
                          solicitud_credito: If(
                              IsBlank(ThisRecord.solicitud_credito),
                              Blank(),
                              Value(ThisRecord.solicitud_credito)
                          ),
                          inicio_mes: Text(
                              If(
                                  IsBlank(ThisRecord.inicio_mes),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.inicio_mes))
                              ),
                              "yyyy-mm-dd"
                          ),
                          inicio_semana: Text(
                              If(
                                  IsBlank(ThisRecord.inicio_semana),
                                  Blank(),
                                  DateTimeValue(Text(ThisRecord.inicio_semana))
                              ),
                              "yyyy-mm-dd"
                          ),
                          estado_solicitud: Text(ThisRecord.estado_solicitud),
                          historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),
                          estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),
                          tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),
                          // Nuevas columnas del LEFT JOIN
                          cluster: Value(ThisRecord.cluster),
                          prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),
                          probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)
                      }
                  )
              );
              Set(
                  varShowFilterGroup_A,
                  false
              );
              // Calcular el total primero (esto puede necesitar un ajuste si el total count se hace en SQL)
              Set(
                  varTotal,
                  CountRows(FullSolicitudes)
              );

              // Colección con Estado
              ClearCollect(
                  colEstadosPorcentual,
                  AddColumns(
                      GroupBy(
                          FullSolicitudes,
                          estado_solicitud,
                          Grupo
                      ),
                      Conteo,
                      CountRows(Grupo),
                      Porcentaje,

                      If(varTotal<>0,
                      Round(
                          CountRows(Grupo) / varTotal * 100,
                          2
                      ),0)


                  )
              );
              // Colección con Historial de Pagos por Cliente
              ClearCollect(
                  colResumenHistorialPagos,
                  AddColumns(
                      GroupBy(
                          FullSolicitudes,
                          historial_pagos,
                          GrupoPorHistorial
                      ),
                      Categoria,
                      historial_pagos,
                      PersonasUnicas,
                      CountRows(
                          Distinct(
                              ShowColumns(
                                  GrupoPorHistorial,
                                  cedula_ciudadania
                              ),
                              cedula_ciudadania
                          )
                      ),
                      TotalPersona,
                      CountRows(
                          Distinct(
                              FullSolicitudes,
                              cedula_ciudadania
                          )
                      ),
                      Porcentaje,
                      If(varTotal<>0,
                      Round(
                          CountRows(
                              Distinct(
                                  ShowColumns(
                                      GrupoPorHistorial,
                                      cedula_ciudadania
                                  ),
                                  cedula_ciudadania
                              )
                          ) / CountRows(
                              Distinct(
                                  FullSolicitudes,
                                  cedula_ciudadania
                              )
                          ) * 100,
                          2
                      ),0)
                  )
              );

              If(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));

              Set(varLoading, false);

            Tooltip: ="Consultar"
            Visible: =varShowFilterGroup_A
            Width: =50
            X: =431
            Y: =698
      - Icon3_1:
          Control: Classic/Icon@2.5.0
          Group: grp_Filter_A
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Height: =50
            Icon: =Icon.Reset
            OnSelect: |-
              =Reset(DatePickerStart);
              Reset(DatePickerEnd);
              Reset(DropdownEstado);
              Reset(SearchIDSolicitud);
              Reset(SearchCedula);
              Reset(SearchApellido);
              Reset(SearchNombre);
            Tooltip: ="Resetear Campos"
            Visible: =varShowFilterGroup_A
            Width: =50
            X: =360
            Y: =701
      - Image_NoData:
          Control: Image@2.2.3
          Group: grp_NoData
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Height: =768
            Image: =fondoapp2
            ImagePosition: =ImagePosition.Fill
            Visible: =varNoDatos
            Width: =1288
            X: =78
      - Label1_1:
          Control: Label@2.5.1
          Group: grp_NoData
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.Lato
            Height: =76
            Italic: =true
            Size: =18
            Text: |-
              ="¡Lo sentimos! 
              No existen datos disponibles..."
            Visible: =varNoDatos
            Width: =328
            X: =559
            Y: =314
      - frm_create:
          Control: Form@2.4.3
          Variant: Classic
          Layout: Vertical
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            DataSource: =solicitudes_processed_warehouse
            DefaultMode: =FormMode.New
            Height: =609
            NumberOfColumns: =2
            Visible: =varShowCreateForm
            Width: =611
            X: =733
            Y: =89
          Children:
            - nombre_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_nombre"
                  Default: =ThisItem.nombre
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_nombre')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_nombre')
                  Required: =true
                  Update: =ipt_nombre_create.Text
                  Width: =305
                  X: =0
                  Y: =0
                Children:
                  - DataCardKey22_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Nombre"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_nombre_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              IsMatch(ipt_nombre_create.Text, "^[A-Za-z\s]+$"),
                              Set(varNombreValid, true),
                              Set(varNombreValid, false);
                              Notify("El nombre debe contener solo letras", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey22_1.Y + DataCardKey22_1.Height + 5
                  - ErrorMessage22_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_nombre_create.Y + ipt_nombre_create.Height
                  - StarVisible22_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey22_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey22_1.Y
            - apellido_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_apellido"
                  Default: =ThisItem.apellido
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_apellido')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_apellido')
                  Required: =true
                  Update: =ipt_apellido_create.Text
                  Width: =305
                  X: =1
                  Y: =0
                Children:
                  - DataCardKey23_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Apellido"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_apellido_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              IsMatch(ipt_apellido_create.Text, "^[A-Za-z\s]+$"),
                              Set(varApellidoValid, true),
                              Set(varApellidoValid, false);
                              Notify("El nombre debe contener solo letras", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey23_1.Y + DataCardKey23_1.Height + 5
                  - ErrorMessage23_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_apellido_create.Y + ipt_apellido_create.Height
                  - StarVisible23_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey23_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey23_1.Y
            - cedula_ciudadania_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_cedula_ciudadania"
                  Default: =ThisItem.cedula_ciudadania
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_cedula_ciudadania')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_cedula_ciudadania')
                  Required: =true
                  Update: =ipt_cedula_create.Text
                  Width: =305
                  X: =0
                  Y: =1
                Children:
                  - DataCardKey24_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Cédula de Ciudadanía"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_cedula_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Clear: =true
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              Len(ipt_cedula_create.Text)<10,
                              Set(varCedulaValid, true),
                              Set(varCedulaValid, false);
                              Notify("No debe ingresar más de 10 caracteres", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Reset: =true
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey24_1.Y + DataCardKey24_1.Height + 5
                  - ErrorMessage24_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_cedula_create.Y + ipt_cedula_create.Height
                  - StarVisible24_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey24_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey24_1.Y
            - edad_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_edad"
                  Default: =ThisItem.edad
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_edad')
                  Required: =true
                  Update: =Value(ipt_edad_create.Text)
                  Width: =305
                  X: =1
                  Y: =1
                Children:
                  - DataCardKey25_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Edad"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_edad_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              And(IsMatch(ipt_edad_create.Text, "^\d+$"),Len(ipt_edad_create.Text)=2),
                              Set(varEdadValid, true),
                              Set(varEdadValid, false);
                              Notify("La edad debe ser un número de 2 dígitos", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey25_1.Y + DataCardKey25_1.Height + 5
                  - ErrorMessage25_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_edad_create.Y + ipt_edad_create.Height
                  - StarVisible25_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey25_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey25_1.Y
            - estado_civil_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicComboBoxOptionSetSingleEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_estado_civil"
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_estado_civil')
                  Required: =true
                  Width: =305
                  X: =0
                  Y: =2
                Children:
                  - DataCardKey26_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Estado Civil"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - DropdownEstadoCivil_create:
                      Control: Classic/ComboBox@2.4.0
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        ChevronBackground: =RGBA(56, 96, 178, 1)
                        ChevronFill: =RGBA(255, 255, 255, 1)
                        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                        ChevronHoverFill: =RGBA(255, 255, 255, 1)
                        DefaultSelectedItems: =[Parent.Default]
                        DisplayFields: =["Value"]
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverFill: =RGBA(186, 202, 226, 1)
                        IsSearchable: =false
                        Items: =["Casado", "Soltero", "Viudo", "Divorciado"]
                        OnChange: |-
                          =Set(
                              varEstadoCivilEncoded,
                              If(
                                  DropdownEstadoCivil_create.Selected.Value = "Casado", 0,
                                  DropdownEstadoCivil_create.Selected.Value = "Soltero", 1,
                                  DropdownEstadoCivil_create.Selected.Value = "Viudo", 2,
                                  3
                              )
                          )
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =RGBA(0, 18, 107, 1)
                        SearchFields: =["Value"]
                        SelectMultiple: =false
                        SelectionColor: =RGBA(255, 255, 255, 1)
                        SelectionFill: =RGBA(56, 96, 178, 1)
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey26_1.Y + DataCardKey26_1.Height + 5
                  - ErrorMessage26_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DropdownEstadoCivil_create.Y + DropdownEstadoCivil_create.Height
                  - StarVisible26_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey26_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey26_1.Y
            - numero_dependientes_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_numero_dependientes"
                  Default: =ThisItem.numero_dependientes
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_numero_dependientes')
                  Required: =true
                  Update: =Value(ipt_dependientes_create.Text)
                  Width: =305
                  X: =1
                  Y: =2
                Children:
                  - DataCardKey29_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Número de Dependientes"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_dependientes_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              And(IsMatch(ipt_dependientes_create.Text, "^\d+$"),Len(ipt_dependientes_create.Text)<=2),
                              Set(varDependientesValid, true),
                              Set(varDependientesValid, false);
                              Notify("Los dependientes deben ser un número igual o menor 2 dígitos", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey29_1.Y + DataCardKey29_1.Height + 5
                  - ErrorMessage29_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_dependientes_create.Y + ipt_dependientes_create.Height
                  - StarVisible29_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey29_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey29_1.Y
            - tipo_empleo_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicComboBoxOptionSetSingleEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_tipo_empleo"
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_tipo_empleo')
                  Required: =true
                  Width: =305
                  X: =0
                  Y: =3
                Children:
                  - DataCardKey41_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Tipo de Empleo"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - DropdownTipoEmpleo_create:
                      Control: Classic/ComboBox@2.4.0
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        ChevronBackground: =RGBA(56, 96, 178, 1)
                        ChevronFill: =RGBA(255, 255, 255, 1)
                        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                        ChevronHoverFill: =RGBA(255, 255, 255, 1)
                        DefaultSelectedItems: =[Parent.Default]
                        DisplayFields: =["Value"]
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverFill: =RGBA(186, 202, 226, 1)
                        IsSearchable: =false
                        Items: =["Fijo", "Autonomo", "Desempleado", "Temporal"]
                        OnChange: |-
                          =Set(
                              varTipoEmpleoEncoded,
                              If(
                                  DropdownTipoEmpleo_create.Selected.Value = "Fijo", 0,
                                  DropdownTipoEmpleo_create.Selected.Value = "Autonomo", 1,
                                  DropdownTipoEmpleo_create.Selected.Value = "Desempleado", 2,
                                  3
                              )
                          )
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =RGBA(0, 18, 107, 1)
                        SearchFields: =["Value"]
                        SelectMultiple: =false
                        SelectionColor: =RGBA(255, 255, 255, 1)
                        SelectionFill: =RGBA(56, 96, 178, 1)
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey41_1.Y + DataCardKey41_1.Height + 5
                  - ErrorMessage41_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DropdownTipoEmpleo_create.Y + DropdownTipoEmpleo_create.Height
                  - StarVisible41_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey41_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey41_1.Y
            - antiguedad_laboral_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_antiguedad_laboral"
                  Default: =ThisItem.antiguedad_laboral
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_antiguedad_laboral')
                  Required: =true
                  Update: =Value(ipt_antiguedad_create.Text)
                  Width: =305
                  X: =1
                  Y: =3
                Children:
                  - ipt_antiguedad_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =Parent.Default
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              And(IsMatch(ipt_antiguedad_create.Text, "^\d+$"),Len(ipt_antiguedad_create.Text)=2),
                              Set(varAntiguedadValid, true),
                              Set(varAntiguedadValid, false);
                              Notify("La antigüedad debe ser un número de 2 dígitos", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =50
                  - ErrorMessage32_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_antiguedad_create.Y + ipt_antiguedad_create.Height
                  - StarVisible32_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: |+
                          =
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =
                  - DataCardKey29_2:
                      Control: Label@2.5.1
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Antigüedad Laboral"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - StarVisible29_2:
                      Control: Label@2.5.1
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey29_2.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =10
            - ingresos_anuales_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_ingresos_anuales"
                  Default: =ThisItem.ingresos_anuales
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_ingresos_anuales')
                  Required: =true
                  Update: =Value(ipt_ingresos_create.Text)
                  Width: =305
                  X: =0
                  Y: =4
                Children:
                  - DataCardKey28_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Ingresos Anuales ($)"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_ingresos_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              IsMatch(ipt_ingresos_create.Text, "^\d+(\.\d{1,2})?$"),
                              Set(varIngresosValid, true),
                              Set(varIngresosValid, false);
                              Notify("Los ingresos deben ser un número con dos decimales", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey28_1.Y + DataCardKey28_1.Height + 5
                  - ErrorMessage28_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_ingresos_create.Y + ipt_ingresos_create.Height
                  - StarVisible28_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey28_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey28_1.Y
            - deuda_actual_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_deuda_actual"
                  Default: =ThisItem.deuda_actual
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_deuda_actual')
                  Required: =true
                  Update: =Value(ipt_deuda_create.Text)
                  Width: =305
                  X: =1
                  Y: =4
                Children:
                  - DataCardKey27_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Deuda Actual ($)"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_deuda_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              IsMatch(ipt_deuda_create.Text, "^\d+(\.\d{1,2})?$"),
                              Set(varDeudaValid, true),
                              Set(varDeudaValid, false);
                              Notify("La deuda debe ser valores numéricos", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey27_1.Y + DataCardKey27_1.Height + 5
                  - ErrorMessage27_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_deuda_create.Y + ipt_deuda_create.Height
                  - StarVisible27_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey27_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey27_1.Y
            - puntaje_crediticio_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_puntaje_crediticio"
                  Default: =ThisItem.puntaje_crediticio
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_puntaje_crediticio')
                  Required: =true
                  Update: =Value(ipt_puntaje_create.Text)
                  Width: =305
                  X: =0
                  Y: =5
                Children:
                  - DataCardKey30_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Puntaje Crediticio"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - ipt_puntaje_create:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Default: =
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        Format: =TextFormat.Number
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: |-
                          =If(
                              IsMatch(ipt_puntaje_create.Text, "^\d+$"),
                              Set(varPuntajeValid, true),
                              Set(varPuntajeValid, false);
                              Notify("El puntaje crediticio debe ser un número entero", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey30_1.Y + DataCardKey30_1.Height + 5
                  - ErrorMessage30_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_puntaje_create.Y + ipt_puntaje_create.Height
                  - StarVisible30_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey30_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey30_1.Y
            - historial_pagos_DataCard2_1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicComboBoxOptionSetSingleEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_historial_pagos"
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_historial_pagos')
                  Required: =true
                  Width: =305
                  X: =1
                  Y: =5
                Children:
                  - DataCardKey35_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Historial de Pago"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - DropdownHistorial_create:
                      Control: Classic/ComboBox@2.4.0
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        ChevronBackground: =RGBA(56, 96, 178, 1)
                        ChevronFill: =RGBA(255, 255, 255, 1)
                        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                        ChevronHoverFill: =RGBA(255, 255, 255, 1)
                        DefaultSelectedItems: =[Parent.Default]
                        DisplayFields: =["Value"]
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.'Open Sans'
                        HoverFill: =RGBA(186, 202, 226, 1)
                        IsSearchable: =false
                        Items: =["Bueno", "Regular", "Malo"]
                        OnChange: |-
                          =Set(
                              varHistorialEncoded,
                              If(
                                  DropdownHistorial_create.Selected.Value = "Bueno", 2,
                                  DropdownHistorial_create.Selected.Value = "Regular", 1,
                                  0
                              )
                          )
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =RGBA(0, 18, 107, 1)
                        SearchFields: =["Value"]
                        SelectMultiple: =false
                        SelectionColor: =RGBA(255, 255, 255, 1)
                        SelectionFill: =RGBA(56, 96, 178, 1)
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey35_1.Y + DataCardKey35_1.Height + 5
                  - ErrorMessage35_1:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DropdownHistorial_create.Y + DropdownHistorial_create.Height
                  - StarVisible35_1:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey35_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey35_1.Y
      - btn_save_create:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            Height: =50
            Icon: =Icon.Save
            OnSelect: "=// Definir id_solicitud_next\r\nSet(id_solicitud_next, \"RA-99900001\");\r\n\r\nSet(varLoading, true);\r\n\r\n\r\n// Calcular inicio_mes (primer día del mes actual)\r\nSet(\r\n    inicioMes,\r\n    Text(\r\n        DateAdd(\r\n            DateAdd(Today(), -Day(Today()) + 1, TimeUnit.Days),\r\n            0,\r\n            TimeUnit.Days\r\n        ),\r\n        \"yyyy-mm-dd\"\r\n    )\r\n);\r\n\r\n// Calcular inicio_semana (domingo de la semana actual)\r\nSet(\r\n    inicioSemana,\r\n    Text(\r\n        DateAdd(\r\n            Today(),\r\n            -(Weekday(Today(), StartOfWeek.Sunday) - 1),\r\n            TimeUnit.Days\r\n        ),\r\n        \"yyyy-mm-dd\"\r\n    )\r\n);\r\n\r\n// Construir la consulta SQL para INSERT\r\nSet(\r\n    sqlQueryCreate,\r\n    Concatenate(\r\n        \"INSERT INTO [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] (id_solicitud, cedula_ciudadania, nombre, apellido, edad, ingresos_anuales, puntaje_crediticio, historial_pagos, deuda_actual, antiguedad_laboral, estado_civil, numero_dependientes, tipo_empleo, fecha_solicitud, solicitud_credito, inicio_mes, inicio_semana, estado_solicitud, historial_pagos_encoded, estado_civil_encoded, tipo_empleo_encoded) VALUES (\",\r\n        \"'\", Text(id_solicitud_next), \"', \",\r\n        \"'\", Text(ipt_cedula_create.Text), \"', \",\r\n        \"'\", Text(ipt_nombre_create.Text), \"', \",\r\n        \"'\", Text(ipt_apellido_create.Text), \"', \",\r\n        Text(Value(ipt_edad_create.Text)), \", \",\r\n        Text(Value(ipt_ingresos_create.Text)), \", \",\r\n        Text(Value(ipt_puntaje_create.Text)), \", \",\r\n        \"'\", Text(DropdownHistorial_create.Selected.Value), \"', \",\r\n        Text(Value(ipt_deuda_create.Text)), \", \",\r\n        Text(Value(ipt_antiguedad_create.Text)), \", \",\r\n        \"'\", Text(DropdownEstado.Selected.Value), \"', \",\r\n        Text(Value(ipt_dependientes_create.Text)), \", \",\r\n        \"'\", Text(DropdownTipoEmpleo_create.Selected.Value), \"', \",\r\n        \"'\", Text(Today(), \"yyyy-mm-dd\"), \"', \",\r\n        \"NULL, \",\r\n        \"'\", inicioMes, \"', \",\r\n        \"'\", inicioSemana, \"', \",\r\n        \"'Pendiente', \",\r\n        Text(varHistorialEncoded), \", \",\r\n        Text(varEstadoCivilEncoded), \", \",\r\n        Text(varTipoEmpleoEncoded), \")\"\r\n    )\r\n);\r\n\r\n// Llamar al flujo de Power Automate\r\nSet(\r\n    flowResponseCreate,\r\n    ExecuteSQLFlowCreate.Run(sqlQueryCreate)\r\n);\r\n\r\n// Mostrar notificación según la respuesta\r\nIf(\r\n    flowResponseCreate.success = \"Registro creado con éxito\",\r\n    Notify(\"Creación exitosa\", NotificationType.Success);\r\n    \r\n\r\n\r\n    ResetForm(frm_create);\r\n    \r\n    ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nClearCollect(\r\n    UltimaFecha,FirstN(\r\n    SortByColumns(solicitudes_processed_warehouse, \"fecha_solicitud\", SortOrder.Descending),1)\r\n);\r\nSet(\r\n    FechaMaxima,\r\n    First(UltimaFecha).fecha_solicitud\r\n);\r\nSet(\r\n    FechaMinima,\r\n    DateAdd(FechaMaxima,-365,\"Days\"));\r\n\r\nReset(DatePickerStart);\r\nReset(DatePickerEnd);\r\nReset(DropdownEstado);\r\nReset(SearchIDSolicitud);\r\nReset(SearchCedula);\r\nReset(SearchApellido);\r\nReset(SearchNombre);\r\n\r\n\r\n\r\n\r\n    Set(\r\n    CurrentPage,\r\n    1\r\n);\r\n\r\n\r\n\r\nSet(\r\n    SqlQuery,\r\n    \"SELECT \r\n        sp.*,\r\n        sc.cluster,\r\n        pp.prediccion_aprobado,\r\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\r\n    FROM \r\n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\r\n    LEFT JOIN\r\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\r\n    LEFT JOIN\r\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud \r\n        \r\n    \r\n        WHERE \" & If(\r\n            IsBlank(SearchIDSolicitud.Text),\r\n            \"1=1\",\r\n            \"id_solicitud LIKE '%\" & Substitute(\r\n                SearchIDSolicitud.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchCedula.Text),\r\n            \"1=1\",\r\n            \"cedula_ciudadania LIKE '%\" & Substitute(\r\n                SearchCedula.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchNombre.Text),\r\n            \"1=1\",\r\n            \"nombre LIKE '%\" & Substitute(\r\n                SearchNombre.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchApellido.Text),\r\n            \"1=1\",\r\n            \"apellido LIKE '%\" & Substitute(\r\n                SearchApellido.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerStart.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud >= '\" & Text(\r\n                DatePickerStart.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerEnd.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud <= '\" & Text(\r\n                DatePickerEnd.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            DropdownEstado.Selected.Value = \"Todos\",\r\n            \"1=1\",\r\n            If(\r\n                DropdownEstado.Selected.Value = \"Evaluadas\",\r\n                \"solicitud_credito IN (0, 1)\",\r\n                \"solicitud_credito IS NULL\"\r\n            )\r\n        ) & \"\r\n\r\n    ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\r\n);\r\nSet(\r\n    flowResponse,\r\n    ObtenerSolicitudesPaginadas.Run(SqlQuery)\r\n);\r\n\r\n\r\nClear(FullSolicitudes);\r\nForAll(\r\n    ParseJSON(flowResponse.results),\r\n    Collect(\r\n        FullSolicitudes,\r\n        {\r\n            id_solicitud: Text(ThisRecord.id_solicitud),\r\n            fecha_solicitud: Text(\r\n                DateTimeValue(Text(ThisRecord.fecha_solicitud)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\r\n            nombre: Text(ThisRecord.nombre),\r\n            apellido: Text(ThisRecord.apellido),\r\n            edad: Value(ThisRecord.edad),\r\n            ingresos_anuales: Value(ThisRecord.ingresos_anuales),\r\n            puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\r\n            historial_pagos: Text(ThisRecord.historial_pagos),\r\n            deuda_actual: Value(ThisRecord.deuda_actual),\r\n            antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\r\n            estado_civil: Text(ThisRecord.estado_civil),\r\n            numero_dependientes: Value(ThisRecord.numero_dependientes),\r\n            tipo_empleo: Text(ThisRecord.tipo_empleo),\r\n            solicitud_credito: If(\r\n                IsBlank(ThisRecord.solicitud_credito),\r\n                Blank(),\r\n                Value(ThisRecord.solicitud_credito)\r\n            ),\r\n            inicio_mes: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_mes)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            inicio_semana: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_semana)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            estado_solicitud: Text(ThisRecord.estado_solicitud),\r\n            historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\r\n            estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\r\n            tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\r\n            // Nuevas columnas del LEFT JOIN\r\n            cluster: Value(ThisRecord.cluster),\r\n            prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\r\n            probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\r\n        }\r\n    )\r\n);\r\n\r\n// Calcular el total primero\r\nSet(\r\n    varTotal,\r\n    CountRows(FullSolicitudes)\r\n);\r\n\r\n\r\n// Colección con Estado\r\nClearCollect(\r\n    colEstadosPorcentual,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            estado_solicitud,\r\n            Grupo\r\n        ),\r\n        Conteo,\r\n        CountRows(Grupo),\r\n        Porcentaje,\r\n\r\n        If(varTotal<>0,\r\n        Round(\r\n            CountRows(Grupo) / varTotal * 100,\r\n            2\r\n        ),0)\r\n\r\n\r\n    )\r\n);\r\n// Colección con Historial de Pagos por Cliente\r\nClearCollect(\r\n    colResumenHistorialPagos,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            historial_pagos,\r\n            GrupoPorHistorial\r\n        ),\r\n        Categoria,\r\n        historial_pagos,\r\n        PersonasUnicas,\r\n        CountRows(\r\n            Distinct(\r\n                ShowColumns(\r\n                    GrupoPorHistorial,\r\n                    cedula_ciudadania\r\n                ),\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        TotalPersona,\r\n        CountRows(\r\n            Distinct(\r\n                FullSolicitudes,\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        Porcentaje,\r\n        If(\r\n            CountRows(Distinct(FullSolicitudes, cedula_ciudadania)) <> 0, // Check if the denominator is not zero\r\n            Round(\r\n                CountRows(\r\n                    Distinct(\r\n                        ShowColumns(\r\n                            GrupoPorHistorial,\r\n                            cedula_ciudadania\r\n                        ),\r\n                        cedula_ciudadania\r\n                    )\r\n                ) / CountRows(\r\n                    Distinct(\r\n                        FullSolicitudes,\r\n                        cedula_ciudadania\r\n                    )\r\n                ) * 100,\r\n                2\r\n            ),\r\n            0 // Return 0 if the denominator is zero\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n\r\nSet(\r\n    TasaAprobacion,\r\n    If(\r\n        varTotal = 0 || CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito))) = 0,\r\n        \"-\",\r\n        Text(\r\n            (CountRows(Filter(FullSolicitudes, solicitud_credito = 1)) / \r\n             CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito)))) * 100,\r\n            \"[$-en-US]#.0%\"\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n// Ver Visuales y Registros\r\nIf(CountRows(FullSolicitudes)>=1, Set(varVisuales_A, true), Set(varVisuales_A, false));\r\nIf(CountRows(FullSolicitudes)>=1, Set(varRegistros_A, true), Set(varRegistros_A, false));\r\n\r\nIf(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));\r\n\r\nSet(varShowCreateForm, false);\r\nSet(varGrpDetalle_A,false);\r\nSet(varBtnMain,true);\r\nSet(varLoading, false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    ,    \r\n          \r\n    Notify(\"Error: No pudo hacerse el registro\", NotificationType.Error)\r\n);\r\n\r\n\r\n\r\n\r\n\r\n"
            Tooltip: ="Guardar Solicitud"
            Visible: =varShowCreateForm
            Width: =50
            X: =1272
            Y: =689
      - btn_reset_create:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            Height: =50
            Icon: =Icon.Reset
            OnSelect: =ResetForm(frm_create)
            Tooltip: ="Resetear Campos"
            Visible: =varShowCreateForm
            Width: =50
            X: =1200
            Y: =689
      - registros_lbl_4:
          Control: Label@2.5.1
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(7, 22, 54, 1)
            Font: =Font.'Lato Black'
            Height: =45
            Size: =22
            Text: ="Crear Solicitud"
            Visible: =varShowCreateForm
            Width: =573
            X: =738
            Y: =34
      - btn_save_edit:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            Height: =50
            Icon: =Icon.Save
            OnSelect: "=\r\nSet(varLoading, true);\r\n\r\n\r\n// Construir la consulta SQL para INSERT\r\nSet(\r\n    sqlQueryUpdate,\r\n    Concatenate(\r\n        \"UPDATE [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] SET \",\r\n        \"estado_solicitud = '\", Text(DropdownSolicitudCredito.Selected.Value), \"', \",\r\n        \"solicitud_credito = \", If(IsBlank(varSolicitudCredito), \"NULL\", Text(varSolicitudCredito)), \" \",\r\n        \"WHERE id_solicitud = '\", Text(lbl_id_edit.Text), \"'\"\r\n    )\r\n);\r\n\r\n// Llamar al flujo de Power Automate\r\nSet(\r\n    flowResponseCreate,\r\n    ExecuteSQLFlowCreate.Run(sqlQueryUpdate)\r\n);\r\n\r\n// Mostrar notificación según la respuesta\r\nIf(\r\n    flowResponseCreate.success = \"Registro creado con éxito\",\r\n    Notify(\"Modificación exitosa\", NotificationType.Success);\r\n    \r\n\r\n\r\n    // Llamar al flujo NotifyDiscordDecision\r\n    Set(\r\n        discordResponse,\r\n        NotifyDiscordDecision.Run(\r\n            lbl_id_edit.Text, // id_solicitud\r\n            ipt_nombre_edit.Text, // nombre\r\n            ipt_apellido_edit.Text, // apellido\r\n            DropdownSolicitudCredito.Selected.Value // decision\r\n        )\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n    ResetForm(frm_edit);\r\n    \r\n    ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nClearCollect(\r\n    UltimaFecha,FirstN(\r\n    SortByColumns(solicitudes_processed_warehouse, \"fecha_solicitud\", SortOrder.Descending),1)\r\n);\r\nSet(\r\n    FechaMaxima,\r\n    First(UltimaFecha).fecha_solicitud\r\n);\r\nSet(\r\n    FechaMinima,\r\n    DateAdd(FechaMaxima,-365,\"Days\"));\r\n\r\nReset(DatePickerStart);\r\nReset(DatePickerEnd);\r\nReset(DropdownEstado);\r\nReset(SearchIDSolicitud);\r\nReset(SearchCedula);\r\nReset(SearchApellido);\r\nReset(SearchNombre);\r\n\r\n\r\n\r\n\r\n    Set(\r\n    CurrentPage,\r\n    1\r\n);\r\n\r\n\r\n\r\nSet(\r\n    SqlQuery,\r\n    \"SELECT \r\n        sp.*,\r\n        sc.cluster,\r\n        pp.prediccion_aprobado,\r\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\r\n    FROM \r\n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\r\n    LEFT JOIN\r\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\r\n    LEFT JOIN\r\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud \r\n        \r\n    \r\n        WHERE \" & If(\r\n            IsBlank(SearchIDSolicitud.Text),\r\n            \"1=1\",\r\n            \"id_solicitud LIKE '%\" & Substitute(\r\n                SearchIDSolicitud.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchCedula.Text),\r\n            \"1=1\",\r\n            \"cedula_ciudadania LIKE '%\" & Substitute(\r\n                SearchCedula.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchNombre.Text),\r\n            \"1=1\",\r\n            \"nombre LIKE '%\" & Substitute(\r\n                SearchNombre.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchApellido.Text),\r\n            \"1=1\",\r\n            \"apellido LIKE '%\" & Substitute(\r\n                SearchApellido.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerStart.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud >= '\" & Text(\r\n                DatePickerStart.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerEnd.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud <= '\" & Text(\r\n                DatePickerEnd.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            DropdownEstado.Selected.Value = \"Todos\",\r\n            \"1=1\",\r\n            If(\r\n                DropdownEstado.Selected.Value = \"Evaluadas\",\r\n                \"solicitud_credito IN (0, 1)\",\r\n                \"solicitud_credito IS NULL\"\r\n            )\r\n        ) & \"\r\n\r\n    ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\r\n);\r\nSet(\r\n    flowResponse,\r\n    ObtenerSolicitudesPaginadas.Run(SqlQuery)\r\n);\r\n\r\n\r\nClear(FullSolicitudes);\r\nForAll(\r\n    ParseJSON(flowResponse.results),\r\n    Collect(\r\n        FullSolicitudes,\r\n        {\r\n            id_solicitud: Text(ThisRecord.id_solicitud),\r\n            fecha_solicitud: Text(\r\n                DateTimeValue(Text(ThisRecord.fecha_solicitud)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\r\n            nombre: Text(ThisRecord.nombre),\r\n            apellido: Text(ThisRecord.apellido),\r\n            edad: Value(ThisRecord.edad),\r\n            ingresos_anuales: Value(ThisRecord.ingresos_anuales),\r\n            puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\r\n            historial_pagos: Text(ThisRecord.historial_pagos),\r\n            deuda_actual: Value(ThisRecord.deuda_actual),\r\n            antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\r\n            estado_civil: Text(ThisRecord.estado_civil),\r\n            numero_dependientes: Value(ThisRecord.numero_dependientes),\r\n            tipo_empleo: Text(ThisRecord.tipo_empleo),\r\n            solicitud_credito: If(\r\n                IsBlank(ThisRecord.solicitud_credito),\r\n                Blank(),\r\n                Value(ThisRecord.solicitud_credito)\r\n            ),\r\n            inicio_mes: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_mes)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            inicio_semana: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_semana)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            estado_solicitud: Text(ThisRecord.estado_solicitud),\r\n            historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\r\n            estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\r\n            tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\r\n            // Nuevas columnas del LEFT JOIN\r\n            cluster: Value(ThisRecord.cluster),\r\n            prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\r\n            probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\r\n        }\r\n    )\r\n);\r\n\r\n// Calcular el total primero\r\nSet(\r\n    varTotal,\r\n    CountRows(FullSolicitudes)\r\n);\r\n\r\n\r\n// Colección con Estado\r\nClearCollect(\r\n    colEstadosPorcentual,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            estado_solicitud,\r\n            Grupo\r\n        ),\r\n        Conteo,\r\n        CountRows(Grupo),\r\n        Porcentaje,\r\n\r\n        If(varTotal<>0,\r\n        Round(\r\n            CountRows(Grupo) / varTotal * 100,\r\n            2\r\n        ),0)\r\n\r\n\r\n    )\r\n);\r\n// Colección con Historial de Pagos por Cliente\r\nClearCollect(\r\n    colResumenHistorialPagos,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            historial_pagos,\r\n            GrupoPorHistorial\r\n        ),\r\n        Categoria,\r\n        historial_pagos,\r\n        PersonasUnicas,\r\n        CountRows(\r\n            Distinct(\r\n                ShowColumns(\r\n                    GrupoPorHistorial,\r\n                    cedula_ciudadania\r\n                ),\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        TotalPersona,\r\n        CountRows(\r\n            Distinct(\r\n                FullSolicitudes,\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        Porcentaje,\r\n        If(\r\n            CountRows(Distinct(FullSolicitudes, cedula_ciudadania)) <> 0, // Check if the denominator is not zero\r\n            Round(\r\n                CountRows(\r\n                    Distinct(\r\n                        ShowColumns(\r\n                            GrupoPorHistorial,\r\n                            cedula_ciudadania\r\n                        ),\r\n                        cedula_ciudadania\r\n                    )\r\n                ) / CountRows(\r\n                    Distinct(\r\n                        FullSolicitudes,\r\n                        cedula_ciudadania\r\n                    )\r\n                ) * 100,\r\n                2\r\n            ),\r\n            0 // Return 0 if the denominator is zero\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n\r\nSet(\r\n    TasaAprobacion,\r\n    If(\r\n        varTotal = 0 || CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito))) = 0,\r\n        \"-\",\r\n        Text(\r\n            (CountRows(Filter(FullSolicitudes, solicitud_credito = 1)) / \r\n             CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito)))) * 100,\r\n            \"[$-en-US]#.0%\"\r\n        )\r\n    )\r\n);\r\n\r\n\r\n    ,    \r\n          \r\n    Notify(\"Error: No pudo hacerse el registro\", NotificationType.Error)\r\n);\r\n\r\n\r\n// Ver Visuales y Registros\r\nIf(CountRows(FullSolicitudes)>=1, Set(varVisuales_A, true), Set(varVisuales_A, false));\r\nIf(CountRows(FullSolicitudes)>=1, Set(varRegistros_A, true), Set(varRegistros_A, false));\r\n\r\nIf(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));\r\n\r\nSet(varShowCreateForm, false);\r\nSet(varGrpDetalle_A,false);\r\nSet(varShowEditForm,false);\r\nSet(varLoading, false);\r\n\r\n\r\n"
            Tooltip: ="Actualizar Solicitud"
            Visible: =varShowEditForm
            Width: =50
            X: =1270
            Y: =683
      - frm_edit:
          Control: Form@2.4.3
          Variant: Classic
          Layout: Vertical
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            DataSource: =solicitudes_processed_warehouse
            DefaultMode: =FormMode.New
            Height: =554
            Visible: =varShowEditForm
            Width: =611
            X: =733
            Y: =77
          Children:
            - id_solicitud_DataCard1:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualView
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="id_solicitud"
                  Default: =ThisItem.id_solicitud
                  DisplayName: =DataSourceInfo([@solicitudes_processed_warehouse],DataSourceInfo.DisplayName,'id_solicitud')
                  Height: =99
                  Required: =false
                  Width: =609
                  X: =0
                  Y: =0
                Children:
                  - DataCardKey1:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="ID Solicitud"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =12
                        Y: =4
                  - lbl_id_edit:
                      Control: Label@2.5.1
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =RGBA(0, 18, 107, 1)
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.Lato
                        Height: =35
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =16
                        Text: =GallerySolicitudes.Selected.id_solicitud
                        Width: =Parent.Width - 60
                        X: =12
                        Y: =38
            - nombre_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_nombre"
                  Default: =ThisItem.nombre
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_nombre')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_nombre')
                  Required: =true
                  Update: =ipt_nombre_edit.Text
                  Width: =203
                  X: =0
                  Y: =1
                Children:
                  - DataCardKey22_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Nombre"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =4
                        Y: =4
                  - ipt_nombre_edit:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =0
                        Default: =GallerySolicitudes.Selected.nombre
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =RGBA(255, 255, 255, 0)
                        Font: =Font.'Open Sans'
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              IsMatch(ipt_nombre_edit.Text, "^[A-Za-z\s]+$"),
                              Set(varNombreValid, true),
                              Set(varNombreValid, false);
                              Notify("El nombre debe contener solo letras", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =170
                        X: =4
                        Y: =40
                  - ErrorMessage22_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_nombre_edit.Y + ipt_nombre_edit.Height
            - apellido_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_apellido"
                  Default: =ThisItem.apellido
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_apellido')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_apellido')
                  Required: =true
                  Update: =ipt_apellido_edit.Text
                  Width: =203
                  X: =1
                  Y: =1
                Children:
                  - DataCardKey23_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Apellido"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        Y: =4
                  - ipt_apellido_edit:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =0
                        Default: =GallerySolicitudes.Selected.apellido
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =RGBA(255, 255, 255, 0)
                        Font: =Font.Lato
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              IsMatch(ipt_apellido_edit.Text, "^[A-Za-z\s]+$"),
                              Set(varApellidoValid, true),
                              Set(varApellidoValid, false);
                              Notify("El nombre debe contener solo letras", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =Parent.DisplayName
                        Width: =171
                        Y: =DataCardKey23_2.Y + DataCardKey23_2.Height + 5
                  - ErrorMessage23_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_apellido_edit.Y + ipt_apellido_edit.Height
            - cedula_ciudadania_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicTextualEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_cedula_ciudadania"
                  Default: =ThisItem.cedula_ciudadania
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_cedula_ciudadania')
                  MaxLength: =DataSourceInfo([@solicitudes_fields], DataSourceInfo.MaxLength, 'crc0f_cedula_ciudadania')
                  Required: =true
                  Update: =ipt_cedula_create_1.Text
                  Width: =200
                  X: =2
                  Y: =1
                Children:
                  - DataCardKey24_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Cédula de Ciudadanía"
                        Width: =198
                        Wrap: =false
                        X: =2
                        Y: =6
                  - ipt_cedula_create_1:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        Clear: =true
                        Default: =GallerySolicitudes.Selected.cedula_ciudadania
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =RGBA(255, 255, 255, 0)
                        Font: =Font.'Open Sans'
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        MaxLength: =Parent.MaxLength
                        OnChange: |-
                          =If(
                              Len(ipt_cedula_create_1.Text)<10,
                              Set(varCedulaValid, true),
                              Set(varCedulaValid, false);
                              Notify("No debe ingresar más de 10 caracteres", NotificationType.Error)
                          )
                        PaddingLeft: =5
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Reset: =true
                        Tooltip: =Parent.DisplayName
                        Width: =180
                        Y: =40
                  - ErrorMessage24_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_cedula_create_1.Y + ipt_cedula_create_1.Height
            - antiguedad_laboral_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_antiguedad_laboral"
                  Default: =ThisItem.antiguedad_laboral
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_antiguedad_laboral')
                  Required: =true
                  Width: =203
                  X: =0
                  Y: =2
                Children:
                  - lbl_prediccion_edit:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        Align: =Align.Center
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =0
                        Color: "=If(lbl_prediccion_edit.Text = \"Aprobado\", RGBA(0, 250, 0, 1), \r\n\r\n    If(lbl_prediccion_edit.Text = \"Rechazado\", RGBA(255, 0, 0, 1), \r\n    \r\n        If(lbl_prediccion_edit.Text = \"Proceso Finalizado\", RGBA(0, 0, 0, 1),\r\n    \r\n    RGBA(240, 50, 0, 1))))"
                        Default: |-
                          =If(And(GallerySolicitudes.Selected.estado_solicitud="Pendiente",IsBlank(GallerySolicitudes.Selected.prediccion_aprobado)=true),"Por Predecir",

                          If(GallerySolicitudes.Selected.estado_solicitud<>"Pendiente","Proceso Finalizado",

                          GallerySolicitudes.Selected.prediccion_aprobado
                          ))
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =If(Or(GallerySolicitudes.Selected.estado_solicitud="Aprobado",GallerySolicitudes.Selected.estado_solicitud="Rechazado"),RGBA(0,0,0,0.2),RGBA(0,0,0,1))
                        Font: =Font.Lato
                        FontWeight: =FontWeight.Semibold
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: =
                        PaddingLeft: =5
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =14
                        Tooltip: ="Predicción"
                        Width: =Parent.Width - 30
                        X: =14
                        Y: =66
                  - ErrorMessage32_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =lbl_prediccion_edit.Y + lbl_prediccion_edit.Height
                  - StarVisible32_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: |+
                          =
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =
                  - DataCardKey29_4:
                      Control: Label@2.5.1
                      Properties:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =48
                        Text: |-
                          ="Predicción de
                           Aprobación"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =8
                        Y: =8
            - numero_dependientes_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_numero_dependientes"
                  Default: =ThisItem.numero_dependientes
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_numero_dependientes')
                  Required: =true
                  Width: =203
                  X: =1
                  Y: =2
                Children:
                  - DataCardKey29_3:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =43
                        Text: |-
                          ="Probabilidad de
                           Aprobación"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =8
                        Y: =6
                  - ipt_probabilidad_edit:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        Align: =Align.Center
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =0
                        Color: "=If(lbl_prediccion_edit.Text = \"Aprobado\", RGBA(0, 250, 0, 1), \r\n\r\n    If(lbl_prediccion_edit.Text = \"Rechazado\", RGBA(255, 0, 0, 1), \r\n    \r\n        If(lbl_prediccion_edit.Text = \"Proceso Finalizado\", RGBA(0, 0, 0, 1),\r\n    \r\n    RGBA(240, 50, 0, 1))))"
                        Default: |-
                          =If(And(GallerySolicitudes.Selected.estado_solicitud="Pendiente",IsBlank(GallerySolicitudes.Selected.prediccion_aprobado)=true),"Por Predecir",

                          If(GallerySolicitudes.Selected.estado_solicitud<>"Pendiente","Proceso Finalizado",

                          GallerySolicitudes.Selected.probabilidad_aprobado & "%"
                          ))
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =If(Or(GallerySolicitudes.Selected.estado_solicitud="Aprobado",GallerySolicitudes.Selected.estado_solicitud="Rechazado"),RGBA(0,0,0,0.2),RGBA(0,0,0,1))
                        Font: =Font.Lato
                        FontWeight: =FontWeight.Semibold
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: =
                        PaddingLeft: =5
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =14
                        Tooltip: ="Probabilidad"
                        Width: |+
                          =Parent.Width - 30

                        X: =8
                        Y: =62
                  - ErrorMessage29_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_probabilidad_edit.Y + ipt_probabilidad_edit.Height
            - ingresos_anuales_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicNumberEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_ingresos_anuales"
                  Default: =ThisItem.ingresos_anuales
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_ingresos_anuales')
                  Required: =true
                  Update: =Value(ipt_DTI_edit.Text)
                  Width: =203
                  X: =2
                  Y: =2
                Children:
                  - DataCardKey28_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="%DTI"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =26
                  - ipt_DTI_edit:
                      Control: Classic/TextInput@2.3.2
                      MetadataKey: FieldValue
                      Properties:
                        Align: =Align.Center
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =0
                        Color: "=If(\r\n    \r\n    (If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual)=false,\r\nRound((GallerySolicitudes.Selected.deuda_actual/GallerySolicitudes.Selected.ingresos_anuales)*100,1),\"-\"))<20,RGBA(30,250,45,1),\r\n\r\n    (If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual)=false,\r\nRound((GallerySolicitudes.Selected.deuda_actual/GallerySolicitudes.Selected.ingresos_anuales)*100,1),\"-\"))<35,RGBA(250,240,1,1),\r\n\r\n    (If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual)=false,\r\nRound((GallerySolicitudes.Selected.deuda_actual/GallerySolicitudes.Selected.ingresos_anuales)*100,1),\"-\"))<50,RGBA(250,131,0,1),\r\n\r\n\r\n\r\n\r\n\r\nRGBA(250,0,0,1))"
                        Default: |+
                          =
                          (If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual)=false,
                          Round((GallerySolicitudes.Selected.deuda_actual/GallerySolicitudes.Selected.ingresos_anuales)*100,1),Blank()))
                        DelayOutput: =true
                        DisplayMode: =Parent.DisplayMode.View
                        Fill: =If(IsBlankOrError(GallerySolicitudes.Selected.deuda_actual)=false, RGBA(0,0,0,1),RGBA(0,0,0,0))
                        Font: =Font.Lato
                        FontWeight: =FontWeight.Semibold
                        HoverBorderColor: =RGBA(0, 18, 107, 1)
                        HoverFill: =RGBA(186, 202, 226, 1)
                        OnChange: =
                        PaddingLeft: =5
                        RadiusBottomLeft: =25
                        RadiusBottomRight: =25
                        RadiusTopLeft: =25
                        RadiusTopRight: =25
                        Size: =14
                        Tooltip: ="DTI"
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =63
                  - ErrorMessage28_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =ipt_DTI_edit.Y + ipt_DTI_edit.Height
            - estado_civil_DataCard2_2:
                Control: TypedDataCard@1.0.7
                Variant: ClassicComboBoxOptionSetSingleEdit
                Properties:
                  BorderColor: =RGBA(0, 18, 107, 1)
                  DataField: ="crc0f_estado_civil"
                  DisplayName: =DataSourceInfo([@solicitudes_fields],DataSourceInfo.DisplayName,'crc0f_estado_civil')
                  Required: =true
                  Width: =609
                  X: =0
                  Y: =3
                Children:
                  - DataCardKey26_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldName
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =34
                        Text: ="Decisión de la Solicitud"
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                  - DropdownSolicitudCredito:
                      Control: Classic/ComboBox@2.4.0
                      MetadataKey: FieldValue
                      Properties:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        ChevronBackground: =RGBA(56, 96, 178, 1)
                        ChevronFill: =RGBA(255, 255, 255, 1)
                        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                        ChevronHoverFill: =RGBA(255, 255, 255, 1)
                        DefaultSelectedItems: |-
                          =If(
                              IsBlank(GallerySolicitudes.Selected),
                              [{Value: "Pendiente"}], 
                              [{Value: GallerySolicitudes.Selected.estado_solicitud}]
                          )
                        DisplayFields: =["Value"]
                        DisplayMode: =Parent.DisplayMode
                        Font: =Font.Lato
                        HoverFill: =RGBA(186, 202, 226, 1)
                        IsSearchable: =false
                        Items: =["Pendiente", "Aprobado", "Rechazado"]
                        OnChange: |-
                          =Set(
                              varSolicitudCredito,
                              If(
                                  DropdownSolicitudCredito.Selected.Value = "Aprobado", 1,
                                  DropdownSolicitudCredito.Selected.Value = "Rechazado", 0,
                                  Blank()
                              )
                          )
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =RGBA(0, 18, 107, 1)
                        SearchFields: =["Value"]
                        SelectMultiple: =false
                        SelectionColor: =RGBA(255, 255, 255, 1)
                        SelectionFill: =RGBA(56, 96, 178, 1)
                        Tooltip: ="Estado de Solicitud"
                        Width: |+
                          =Parent.Width - 200
                        X: =30
                        Y: =DataCardKey26_2.Y + DataCardKey26_2.Height + 5
                  - ErrorMessage26_2:
                      Control: Label@2.5.1
                      MetadataKey: ErrorMessage
                      Properties:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(168, 0, 0, 1)
                        Font: =Font.'Open Sans'
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =14
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DropdownSolicitudCredito.Y + DropdownSolicitudCredito.Height
                  - StarVisible26_2:
                      Control: Label@2.5.1
                      MetadataKey: FieldRequired
                      Properties:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 1)
                        Color: =RGBA(0, 18, 107, 1)
                        Font: =Font.'Open Sans'
                        Height: =DataCardKey26_2.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey26_2.Y
      - btn_save_edit_1:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 18, 107, 1)
            Height: =50
            Icon: =Icon.Trash
            OnSelect: "=\r\nSet(varLoading, true);\r\n\r\n\r\n// Construir la consulta SQL para DELETE\r\nSet(\r\n    sqlQueryUpdate,\r\n    Concatenate(\r\n        \"DELETE FROM [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse]  \",\r\n        \"WHERE id_solicitud = '\", Text(lbl_id_edit.Text), \"'\"\r\n    )\r\n);\r\n\r\n// Llamar al flujo de Power Automate\r\nSet(\r\n    flowResponseCreate,\r\n    ExecuteSQLFlowCreate.Run(sqlQueryUpdate)\r\n);\r\n\r\n// Mostrar notificación según la respuesta\r\nIf(\r\n    flowResponseCreate.success = \"Registro creado con éxito\",\r\n    Notify(\"Eliminación exitosa\", NotificationType.Success);\r\n    \r\n\r\n\r\n    ResetForm(frm_edit);\r\n    \r\n    ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nClearCollect(\r\n    UltimaFecha,FirstN(\r\n    SortByColumns(solicitudes_processed_warehouse, \"fecha_solicitud\", SortOrder.Descending),1)\r\n);\r\nSet(\r\n    FechaMaxima,\r\n    First(UltimaFecha).fecha_solicitud\r\n);\r\nSet(\r\n    FechaMinima,\r\n    DateAdd(FechaMaxima,-365,\"Days\"));\r\n\r\nReset(DatePickerStart);\r\nReset(DatePickerEnd);\r\nReset(DropdownEstado);\r\nReset(SearchIDSolicitud);\r\nReset(SearchCedula);\r\nReset(SearchApellido);\r\nReset(SearchNombre);\r\n\r\n\r\n\r\n\r\n    Set(\r\n    CurrentPage,\r\n    1\r\n);\r\n\r\n\r\n\r\nSet(\r\n    SqlQuery,\r\n    \"SELECT \r\n        sp.*,\r\n        sc.cluster,\r\n        pp.prediccion_aprobado,\r\n        ROUND(pp.score_aprobacion*100,1) AS 'probabilidad_aprobado'\r\n    FROM \r\n        [PowerAppRiskApp].[dbo].[solicitudes_processed_warehouse] AS sp\r\n    LEFT JOIN\r\n        solicitudes_clustered AS sc ON sp.id_solicitud = sc.id_solicitud\r\n    LEFT JOIN\r\n        predicciones_pendientes AS pp ON sp.id_solicitud = pp.id_solicitud \r\n        \r\n    \r\n        WHERE \" & If(\r\n            IsBlank(SearchIDSolicitud.Text),\r\n            \"1=1\",\r\n            \"id_solicitud LIKE '%\" & Substitute(\r\n                SearchIDSolicitud.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchCedula.Text),\r\n            \"1=1\",\r\n            \"cedula_ciudadania LIKE '%\" & Substitute(\r\n                SearchCedula.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchNombre.Text),\r\n            \"1=1\",\r\n            \"nombre LIKE '%\" & Substitute(\r\n                SearchNombre.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(SearchApellido.Text),\r\n            \"1=1\",\r\n            \"apellido LIKE '%\" & Substitute(\r\n                SearchApellido.Text,\r\n                \"'\",\r\n                \"''\"\r\n            ) & \"%'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerStart.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud >= '\" & Text(\r\n                DatePickerStart.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            IsBlank(DatePickerEnd.SelectedDate),\r\n            \"1=1\",\r\n            \"fecha_solicitud <= '\" & Text(\r\n                DatePickerEnd.SelectedDate,\r\n                \"[$-en-US]yyyy-mm-dd\"\r\n            ) & \"'\"\r\n        ) & \" AND \" & If(\r\n            DropdownEstado.Selected.Value = \"Todos\",\r\n            \"1=1\",\r\n            If(\r\n                DropdownEstado.Selected.Value = \"Evaluadas\",\r\n                \"solicitud_credito IN (0, 1)\",\r\n                \"solicitud_credito IS NULL\"\r\n            )\r\n        ) & \"\r\n\r\n    ORDER BY id_solicitud DESC OFFSET (\" & CurrentPage & \" - 1) * \" & PageSize & \" ROWS FETCH NEXT \" & PageSize & \" ROWS ONLY\"\r\n);\r\nSet(\r\n    flowResponse,\r\n    ObtenerSolicitudesPaginadas.Run(SqlQuery)\r\n);\r\n\r\n\r\nClear(FullSolicitudes);\r\nForAll(\r\n    ParseJSON(flowResponse.results),\r\n    Collect(\r\n        FullSolicitudes,\r\n        {\r\n            id_solicitud: Text(ThisRecord.id_solicitud),\r\n            fecha_solicitud: Text(\r\n                DateTimeValue(Text(ThisRecord.fecha_solicitud)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            cedula_ciudadania: Text(ThisRecord.cedula_ciudadania),\r\n            nombre: Text(ThisRecord.nombre),\r\n            apellido: Text(ThisRecord.apellido),\r\n            edad: Value(ThisRecord.edad),\r\n            ingresos_anuales: Value(ThisRecord.ingresos_anuales),\r\n            puntaje_crediticio: Value(ThisRecord.puntaje_crediticio),\r\n            historial_pagos: Text(ThisRecord.historial_pagos),\r\n            deuda_actual: Value(ThisRecord.deuda_actual),\r\n            antiguedad_laboral: Value(ThisRecord.antiguedad_laboral),\r\n            estado_civil: Text(ThisRecord.estado_civil),\r\n            numero_dependientes: Value(ThisRecord.numero_dependientes),\r\n            tipo_empleo: Text(ThisRecord.tipo_empleo),\r\n            solicitud_credito: If(\r\n                IsBlank(ThisRecord.solicitud_credito),\r\n                Blank(),\r\n                Value(ThisRecord.solicitud_credito)\r\n            ),\r\n            inicio_mes: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_mes)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            inicio_semana: Text(\r\n                DateTimeValue(Text(ThisRecord.inicio_semana)),\r\n                \"yyyy-mm-dd\"\r\n            ),\r\n            estado_solicitud: Text(ThisRecord.estado_solicitud),\r\n            historial_pagos_encoded: Value(ThisRecord.historial_pagos_encoded),\r\n            estado_civil_encoded: Value(ThisRecord.estado_civil_encoded),\r\n            tipo_empleo_encoded: Value(ThisRecord.tipo_empleo_encoded),\r\n            // Nuevas columnas del LEFT JOIN\r\n            cluster: Value(ThisRecord.cluster),\r\n            prediccion_aprobado: Text(ThisRecord.prediccion_aprobado),\r\n            probabilidad_aprobado: Value(ThisRecord.probabilidad_aprobado)\r\n        }\r\n    )\r\n);\r\n\r\n// Calcular el total primero\r\nSet(\r\n    varTotal,\r\n    CountRows(FullSolicitudes)\r\n);\r\n\r\n\r\n// Colección con Estado\r\nClearCollect(\r\n    colEstadosPorcentual,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            estado_solicitud,\r\n            Grupo\r\n        ),\r\n        Conteo,\r\n        CountRows(Grupo),\r\n        Porcentaje,\r\n\r\n        If(varTotal<>0,\r\n        Round(\r\n            CountRows(Grupo) / varTotal * 100,\r\n            2\r\n        ),0)\r\n\r\n\r\n    )\r\n);\r\n// Colección con Historial de Pagos por Cliente\r\nClearCollect(\r\n    colResumenHistorialPagos,\r\n    AddColumns(\r\n        GroupBy(\r\n            FullSolicitudes,\r\n            historial_pagos,\r\n            GrupoPorHistorial\r\n        ),\r\n        Categoria,\r\n        historial_pagos,\r\n        PersonasUnicas,\r\n        CountRows(\r\n            Distinct(\r\n                ShowColumns(\r\n                    GrupoPorHistorial,\r\n                    cedula_ciudadania\r\n                ),\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        TotalPersona,\r\n        CountRows(\r\n            Distinct(\r\n                FullSolicitudes,\r\n                cedula_ciudadania\r\n            )\r\n        ),\r\n        Porcentaje,\r\n        If(\r\n            CountRows(Distinct(FullSolicitudes, cedula_ciudadania)) <> 0, // Check if the denominator is not zero\r\n            Round(\r\n                CountRows(\r\n                    Distinct(\r\n                        ShowColumns(\r\n                            GrupoPorHistorial,\r\n                            cedula_ciudadania\r\n                        ),\r\n                        cedula_ciudadania\r\n                    )\r\n                ) / CountRows(\r\n                    Distinct(\r\n                        FullSolicitudes,\r\n                        cedula_ciudadania\r\n                    )\r\n                ) * 100,\r\n                2\r\n            ),\r\n            0 // Return 0 if the denominator is zero\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n\r\nSet(\r\n    TasaAprobacion,\r\n    If(\r\n        varTotal = 0 || CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito))) = 0,\r\n        \"-\",\r\n        Text(\r\n            (CountRows(Filter(FullSolicitudes, solicitud_credito = 1)) / \r\n             CountRows(Filter(FullSolicitudes, !IsBlank(solicitud_credito)))) * 100,\r\n            \"[$-en-US]#.0%\"\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n    ,    \r\n          \r\n    Notify(\"Error: No pudo eliminarse el registro\", NotificationType.Error)\r\n);\r\n\r\n\r\n// Ver Visuales y Registros\r\nIf(CountRows(FullSolicitudes)>=1, Set(varVisuales_A, true), Set(varVisuales_A, false));\r\nIf(CountRows(FullSolicitudes)>=1, Set(varRegistros_A, true), Set(varRegistros_A, false));\r\n\r\nIf(varTotal=0, Set(varNoDatos, true), Set(varNoDatos, false));\r\n\r\nSet(varShowCreateForm, false);\r\nSet(varGrpDetalle_A,false);\r\nSet(varShowEditForm,false);\r\nSet(varLoading, false);\r\n\r\n\r\n"
            Tooltip: ="Eliminar Solicitud"
            Visible: =varShowEditForm
            Width: =50
            X: =1200
            Y: =683
      - registros_lbl_6:
          Control: Label@2.5.1
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(7, 22, 54, 1)
            Font: =Font.'Lato Black'
            Height: =45
            Size: =22
            Text: ="Editar Solicitud"
            Visible: =varShowEditForm
            Width: =573
            X: =738
            Y: =35
      - Image1_4:
          Control: Image@2.2.3
          Group: grp_loading_4
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Height: =768
            Image: ='FONDOS RISK APP 5'
            ImagePosition: =ImagePosition.Fill
            Visible: =varLoading
            Width: =1366
      - Image2_4:
          Control: Image@2.2.3
          Group: grp_loading_4
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Image: ='Spinner@1x-1.0s-200px-200px (1)'
            Visible: =varLoading
            Width: =115
            X: =610
            Y: =318
      - back_detalle_A_1:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(7, 22, 54, 1)
            Height: =25
            Icon: =Icon.CancelBadge
            OnSelect: |-
              =Set(varShowCreateForm,false);
              Set(varVisuales_A, true)
            Visible: =varShowCreateForm
            Width: =25
            X: =1290
            Y: =43
      - back_detalle_A_2:
          Control: Classic/Icon@2.5.0
          Properties:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(7, 22, 54, 1)
            Height: =25
            Icon: =Icon.CancelBadge
            OnSelect: |-
              =Set(varShowEditForm,false);
              Set(varGrpDetalle_A, true)
            Visible: =varShowEditForm
            Width: =25
            X: =1300
            Y: =43
